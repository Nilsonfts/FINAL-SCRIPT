/**
 * –¢–ï–°–¢–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ö–†–ê–°–ò–í–û–ì–û –û–§–û–†–ú–õ–ï–ù–ò–Ø
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
 */

/**
 * –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ "–†–ê–ë–û–ß–ò–ô –ê–ú–û"
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±—É–¥—É—Ç —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã —Å—Ç–æ–ª–±—Ü—ã –ø–æ –±–ª–æ–∫–∞–º
 */
function testWorkingAmoColumnGrouping() {
  try {
    // –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏–∑ –†–ê–ë–û–ß–ò–ô –ê–ú–û
    const testHeaders = [
      '–°–¥–µ–ª–∫–∞.ID', '–°–¥–µ–ª–∫–∞.–ù–∞–∑–≤–∞–Ω–∏–µ', '–ö–æ–Ω—Ç–∞–∫—Ç.ID', '–ö–æ–Ω—Ç–∞–∫—Ç.–ò–º—è', '–ö–æ–Ω—Ç–∞–∫—Ç.–¢–µ–ª–µ—Ñ–æ–Ω', '–ö–æ–Ω—Ç–∞–∫—Ç.Email',
      '–°–¥–µ–ª–∫–∞.–°—Ç–∞—Ç—É—Å', '–°–¥–µ–ª–∫–∞.–≠—Ç–∞–ø', '–°–¥–µ–ª–∫–∞.Pipeline', 
      '–°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è', 'TIME',
      'UTM_Source', 'UTM_Medium', 'UTM_Campaign', '–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ', '–ö–∞–Ω–∞–ª –¢–ï–õ',
      'Res.–í–∏–∑–∏—Ç—ã', 'Res.–°—É–º–º–∞', 'Res.–°—Ç–∞—Ç—É—Å',
      'Gue.–í–∏–∑–∏—Ç—ã', 'Gue.–û–±—â–∞—è —Å—É–º–º–∞', 'Gue.–ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç',
      '–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏'
    ];
    
    // –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É —Å—Ç–æ–ª–±—Ü–æ–≤  
    const groups = getWorkingAmoColumnGroups_(testHeaders);
    
    console.log('üé® –ì–†–£–ü–ü–ò–†–û–í–ö–ê –°–¢–û–õ–ë–¶–û–í –¥–ª—è –ª–∏—Å—Ç–∞ "–†–ê–ë–û–ß–ò–ô –ê–ú–û":');
    console.log('================================================');
    
    groups.forEach((group, index) => {
      const columns = testHeaders.slice(group.startIndex, group.endIndex + 1);
      console.log(`\nüì¶ –ë–õ–û–ö ${index + 1}: ${group.name}`);
      console.log(`üé® –¶–≤–µ—Ç: ${group.color}`);
      console.log(`üìç –°—Ç–æ–ª–±—Ü—ã: ${String.fromCharCode(65 + group.startIndex)}-${String.fromCharCode(65 + group.endIndex)}`);
      console.log(`üìã –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: ${columns.join(', ')}`);
    });
    
    console.log('\n‚ú® –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –û–§–û–†–ú–õ–ï–ù–ò–Ø:');
    console.log('‚Ä¢ –ö–∞–∂–¥—ã–π –±–ª–æ–∫ –∏–º–µ–µ—Ç —Å–≤–æ–π —Ü–≤–µ—Ç —Ñ–æ–Ω–∞');
    console.log('‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –±–ª–æ–∫–æ–≤ –≤—ã–¥–µ–ª–µ–Ω—ã –±–æ–ª–µ–µ —è—Ä–∫–∏–º –æ—Ç—Ç–µ–Ω–∫–æ–º');
    console.log('‚Ä¢ –°—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–¥—É—é—Ç—Å—è –º–µ–∂–¥—É –±–µ–ª—ã–º –∏ —Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–º');
    console.log('‚Ä¢ –ë–ª–æ–∫–∏ –æ–±–≤–µ–¥–µ–Ω—ã —Ä–∞–º–∫–∞–º–∏ –¥–ª—è —á–µ—Ç–∫–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è');
    console.log('‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥–±–æ—Ä —à–∏—Ä–∏–Ω—ã —Å—Ç–æ–ª–±—Ü–æ–≤');
    console.log('‚Ä¢ –ó–∞–º–æ—Ä–æ–∑–∫–∞ —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
    
    return {
      success: true,
      groups: groups,
      totalColumns: testHeaders.length,
      message: `–¢–µ—Å—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω! –ù–∞–π–¥–µ–Ω–æ ${groups.length} –±–ª–æ–∫–æ–≤ –∏–∑ ${testHeaders.length} —Å—Ç–æ–ª–±—Ü–æ–≤`
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏:', error);
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã
 */
function previewColorScheme() {
  try {
    const blockColors = [
      '#E3F2FD', // –°–≤–µ—Ç–ª–æ-–≥–æ–ª—É–±–æ–π
      '#F3E5F5', // –°–≤–µ—Ç–ª–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π  
      '#E8F5E8', // –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
      '#FFF3E0', // –°–≤–µ—Ç–ª–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–π
      '#FCE4EC', // –°–≤–µ—Ç–ª–æ-—Ä–æ–∑–æ–≤—ã–π
      '#F1F8E9', // –°–≤–µ—Ç–ª–æ-—Å–∞–ª–∞—Ç–æ–≤—ã–π
      '#E0F2F1', // –°–≤–µ—Ç–ª–æ-–±–∏—Ä—é–∑–æ–≤—ã–π
      '#FFF8E1'  // –°–≤–µ—Ç–ª–æ-–∂–µ–ª—Ç—ã–π
    ];
    
    console.log('üé® –¶–í–ï–¢–û–í–ê–Ø –°–•–ï–ú–ê –¥–ª—è –±–ª–æ–∫–æ–≤:');
    console.log('============================');
    
    blockColors.forEach((color, index) => {
      const darkerColor = darkenColor_(color, 0.3);
      const lighterColor = lightenColor_(color, 0.8);
      
      console.log(`\nüé® –ë–ª–æ–∫ ${index + 1}:`);
      console.log(`   –û—Å–Ω–æ–≤–Ω–æ–π: ${color}`);
      console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${darkerColor} (—Ç–µ–º–Ω–µ–µ –Ω–∞ 30%)`);
      console.log(`   –î–∞–Ω–Ω—ã–µ: ${lighterColor} (—Å–≤–µ—Ç–ª–µ–µ –Ω–∞ 80%)`);
    });
    
    console.log('\n‚ú® –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¶–í–ï–¢–ê:');
    console.log(`üìÑ –ß–µ—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏: #FFFFFF (–±–µ–ª—ã–π)`);
    console.log(`üìÑ –ù–µ—á–µ—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏: #F8F9FA (–æ—á–µ–Ω—å —Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π)`);
    console.log(`üî≤ –†–∞–º–∫–∏ –±–ª–æ–∫–æ–≤: #CCCCCC (—Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π)`);
    console.log(`üî≥ –†–∞–º–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: #666666 (—Å—Ä–µ–¥–Ω–µ-—Å–µ—Ä—ã–π)`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', error);
  }
}
