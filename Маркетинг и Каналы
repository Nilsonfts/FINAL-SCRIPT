/**********************************************************
 * üìä –ú–ê–†–ö–ï–¢–ò–ù–ì –ò –ö–ê–ù–ê–õ–´ ‚Äî —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç
 * –ò—Å—Ç–æ—á–Ω–∏–∫:  –ª–∏—Å—Ç "–†–ê–ë–û–ß–ò–ô –ê–ú–û"
 * –ë—é–¥–∂–µ—Ç—ã:   –ª–∏—Å—Ç "–ë–Æ–î–ñ–ï–¢–´" (–∏–ª–∏ "–ó–ê–¢–†–ê–¢–´ –ú–ê–†–ö–ï–¢–ò–ù–ì", autodetect)
 * –®—Ä–∏—Ñ—Ç:     PT Sans
 * –£—Å–ø–µ—Ö:     –û–ø–ª–∞—á–µ–Ω–æ / –£—Å–ø–µ—à–Ω–æ –≤ –†–ü / –£—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
 * –î–æ—Ö–æ–¥:     AX (–ø–æ—Å–ª–µ–¥–Ω–∏–π "–°—É–º–º–∞ ‚ÇΩ"), –µ—Å–ª–∏ 0 ‚Üí "–ë—é–¥–∂–µ—Ç"
 **********************************************************/
const MKT = {
  RA_SHEET: '–†–ê–ë–û–ß–ò–ô –ê–ú–û',
  OUT_SHEET: '–ú–ê–†–ö–ï–¢–ò–ù–ì –ò –ö–ê–ù–ê–õ–´',
  COST_SHEET_NAMES: ['–ë–Æ–î–ñ–ï–¢–´', '–ó–ê–¢–†–ê–¢–´ –ú–ê–†–ö–ï–¢–ò–ù–ì', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: –±—é–¥–∂–µ—Ç—ã'],
  FONT: 'PT Sans',
  SUCCESS_NAMES: ['–û–ø–ª–∞—á–µ–Ω–æ','–£—Å–ø–µ—à–Ω–æ –≤ –†–ü','–£—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'],
  // –∫–∞–∫–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –∏—â–µ–º –≤ "–†–ê–ë–û–ß–ò–ô –ê–ú–û"
  HEADERS: {
    CREATED: ['–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è'],
    CLOSED:  ['–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è'],                 // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    STATUS:  ['–°—Ç–∞—Ç—É—Å','–°–¥–µ–ª–∫–∞.–°—Ç–∞—Ç—É—Å'],
    BUDGET:  ['–ë—é–¥–∂–µ—Ç','–°–¥–µ–ª–∫–∞.–ë—é–¥–∂–µ—Ç'],
    TELTAG:  ['R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏','–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏','R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ'],
    UTM_SOURCE: ['UTM_SOURCE','utm_source'],
    LAST_FORM: ['–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞','Site.–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞'], // –¥–ª—è direct_site
    FORMID:  ['FORMID','–°–¥–µ–ª–∫–∞.FORMID'],
    FORMNAME:['FORMNAME','–°–¥–µ–ª–∫–∞.FORMNAME'],
    REFERER: ['REFERER','–°–¥–µ–ª–∫–∞.REFERER'],
    DATE:    ['DATE','–°–¥–µ–ª–∫–∞.DATE'],            // –∫–∞–∫ —Ñ–∞–∫—Ç —Å–æ–±—ã—Ç–∏—è
    // AX ‚Äî –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–æ–ª–æ–Ω–∫—É "–°—É–º–º–∞ ‚ÇΩ"
    SUM_TITLE_RE: /—Å—É–º–º–∞\s*‚ÇΩ/i
  }
};

/* ======================== –ü–£–ë–õ–ò–ß–ù–û ======================== */
function buildMarketingChannels(){
  const ss = SpreadsheetApp.getActiveSpreadsheet();

  // 1) –ß–∏—Ç–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ (–†–ê–ë–û–ß–ò–ô –ê–ú–û)
  const src = readRA_(ss);

  // 2) –ê–≥—Ä–µ–≥–∞—Ü–∏—è –ø–æ –∫–∞–Ω–∞–ª–∞–º –∏ –ø–æ –º–µ—Å—è—Ü–∞–º
  const byChannel = new Map();       // ch -> {leads, succ, revenue}
  const byMonthCh = new Map();       // key ch|YYYY-MM -> {leads, succ, revenue}
  let totalLeads = 0, totalSucc = 0, totalRevenue = 0;

  src.rows.forEach(r=>{
    const created = r[src.iCreated] || r[src.iDate] || '';
    if (!created) return;

    totalLeads++;
    const status = normalizeStatus_(r[src.iStatus]);
    const ok = MKT.SUCCESS_NAMES.includes(status);

    const ch = pickChannel_(r, src);                 // –∫–∞–Ω–∞–ª
    const bucket = byChannel.get(ch) || {leads:0, succ:0, revenue:0};
    bucket.leads++;

    let rev = 0;
    if (ok) {
      const ax = toNum_(r[src.iAX]);
      rev = ax>0 ? ax : toNum_(r[src.iBudget]);
      bucket.succ++;
      bucket.revenue += rev;
      totalSucc++;
      totalRevenue += rev;
    }
    byChannel.set(ch, bucket);

    // –ø–æ–º–µ—Å—è—á–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è
    const k = monthKey_(created);
    const mk = ch + '|' + k.key;
    const b2 = byMonthCh.get(mk) || {leads:0, succ:0, revenue:0, label:k.label, order:k.key, ch:ch};
    b2.leads++;
    if (ok){ b2.succ++; b2.revenue += rev; }
    byMonthCh.set(mk, b2);
  });

  // 3) –ß–∏—Ç–∞–µ–º –±—é–¥–∂–µ—Ç—ã (–æ–±—â–∏–µ –∏ –ø–æ–º–µ—Å—è—á–Ω—ã–µ)
  const costs = readCosts_(ss); // {totalByChannel, monthByChannel}

  // 4) –ì–æ—Ç–æ–≤–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –ø–æ –∫–∞–Ω–∞–ª–∞–º
  const channels = [...byChannel.entries()].map(([ch,v])=>{
    const cost = costs.totalByChannel.get(ch) || 0;
    const avg  = v.succ ? (v.revenue / v.succ) : 0;
    const conv = v.leads ? (v.succ / v.leads) : 0;
    const cac  = (v.succ>0 && cost>0) ? (cost / v.succ) : 0;
    const romi = (cost>0) ? ((v.revenue - cost) / cost) : 0;
    const roi  = romi; // –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ —Ä–∞–≤–Ω—ã
    return {
      ch, leads:v.leads, succ:v.succ, revenue:v.revenue, cost,
      cac, romi, roi, avg, conv
    };
  }).sort((a,b)=>b.revenue-a.revenue);

  // 5) –ü–æ–º–µ—Å—è—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –±—é–¥–∂–µ—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–¥–µ–ª–∫–∏)
  const months = [...byMonthCh.values()].sort((a,b)=> a.order.localeCompare(b.order));
  const monthsRows = months.map(m=>{
    const cost = costs.monthByChannel.get(m.ch+'|'+m.order) || 0;
    const avg  = m.succ ? (m.revenue/m.succ) : 0;
    const conv = m.leads ? (m.succ/m.leads) : 0;
    const cac  = (m.succ>0 && cost>0) ? (cost/m.succ) : 0;
    const romi = (cost>0) ? ((m.revenue - cost)/cost) : 0;
    return [m.label, m.ch, m.leads, m.succ, m.revenue, cost, cac, romi, avg, conv];
  });

  // 6) –†–µ–Ω–¥–µ—Ä
  const sh = ss.getSheetByName(MKT.OUT_SHEET) || ss.insertSheet(MKT.OUT_SHEET);
  sh.clear();
  setFontAll_(sh, MKT.FONT);

  let row = 1, col = 1;

  // –®–∞–ø–∫–∞
  band_(sh,row,col,1,14,'#153E5C');
  sh.getRange(row,col,1,14).merge()
    .setValue('üìä –ú–ê–†–ö–ï–¢–ò–ù–ì –ò –ö–ê–ù–ê–õ–´')
    .setFontColor('#ffffff').setFontWeight('bold').setFontSize(18)
    .setHorizontalAlignment('left').setVerticalAlignment('middle');
  row += 1;

  // –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  sh.getRange(row,col).setValue('–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:').setFontWeight('bold');
  sh.getRange(row,col+1).setValue(new Date()).setNumberFormat('dd.MM.yyyy, HH:mm:ss');
  row += 2;

  // –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  section_(sh,row,col,'‚úÖ –ö–õ–Æ–ß–ï–í–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò',10,'#D8EAC6'); row++;
  writeTable_(sh,row,col,
    ['–ú–µ—Ç—Ä–∏–∫–∞','–ó–Ω–∞—á–µ–Ω–∏–µ','–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'],
    [
      ['–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫', totalLeads, '–≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ ¬´–†–ê–ë–û–ß–ò–ô –ê–ú–û¬ª'],
      ['–£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫', totalSucc, '–û–ø–ª–∞—á–µ–Ω–æ/–£—Å–ø–µ—à–Ω–æ –≤ –†–ü/–£—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'],
      ['–û–±—â–∏–π –¥–æ—Ö–æ–¥ ‚ÇΩ', totalRevenue, 'AX, –µ—Å–ª–∏ 0 ‚Üí –ë—é–¥–∂–µ—Ç (—Ç–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω—ã–µ)'],
      ['–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ ‚ÇΩ', (totalSucc? totalRevenue/totalSucc:0), '–î–æ—Ö–æ–¥ / –£—Å–ø–µ—à–Ω—ã–µ'],
      ['–ö–æ–Ω–≤–µ—Ä—Å–∏—è', (totalLeads? totalSucc/totalLeads:0), '–£—Å–ø–µ—à–Ω—ã–µ / –í—Å–µ']
    ]
  );
  numberFmt_(sh,row+2,col+1,1,1,'#,##0');                  // –£—Å–ø–µ—à–Ω—ã—Ö
  numberFmt_(sh,row+3,col+1,1,1,'#,##0');                  // –î–æ—Ö–æ–¥
  numberFmt_(sh,row+4,col+1,1,1,'#,##0');                  // –°—Ä —á–µ–∫
  numberFmt_(sh,row+5,col+1,1,1,'0.00%');                  // –ö–æ–Ω–≤–µ—Ä—Å–∏—è
  row += 7;

  // –ò–¢–û–ì–ò –ü–û –ö–ê–ù–ê–õ–ê–ú
  section_(sh,row,col,'üìà –ò–¢–û–ì–û –ü–û –ö–ê–ù–ê–õ–ê–ú (–∑–∞ –≤—Å—ë –≤—Ä–µ–º—è)',12,'#EAF3FF'); row++;
  const head = ['–ö–∞–Ω–∞–ª','–°–¥–µ–ª–∫–∏','–£—Å–ø–µ—à–Ω—ã–µ','–î–æ—Ö–æ–¥ ‚ÇΩ','–†–∞—Å—Ö–æ–¥ ‚ÇΩ','CAC ‚ÇΩ','ROMI %','ROI %','–°—Ä. —á–µ–∫ ‚ÇΩ','–ö–æ–Ω–≤–µ—Ä—Å–∏—è'];
  const body = channels.map(x=>[
    x.ch, x.leads, x.succ, x.revenue, x.cost, x.cac, x.romi, x.roi, x.avg, x.conv
  ]);
  writeTable_(sh,row,col, head, body);
  // —Ñ–æ—Ä–º–∞—Ç—ã
  numberFmt_(sh,row+1,col+3,body.length,1,'#,##0');   // –î–æ—Ö–æ–¥
  numberFmt_(sh,row+1,col+4,body.length,1,'#,##0');   // –†–∞—Å—Ö–æ–¥
  numberFmt_(sh,row+1,col+5,body.length,1,'#,##0');   // CAC
  numberFmt_(sh,row+1,col+6,body.length,1,'0.00%');   // ROMI
  numberFmt_(sh,row+1,col+7,body.length,1,'0.00%');   // ROI
  numberFmt_(sh,row+1,col+8,body.length,1,'#,##0');   // –°—Ä —á–µ–∫
  numberFmt_(sh,row+1,col+9,body.length,1,'0.00%');   // –ö–æ–Ω–≤–µ—Ä—Å–∏—è
  const chartStart = row; const chartRows = Math.max(1, body.length+1);
  row += (body.length + 3);

  // –î–∏–∞–≥—Ä–∞–º–º–∞ ¬´–î–æ—Ö–æ–¥ –ø–æ –∫–∞–Ω–∞–ª–∞–º¬ª
  try {
    sh.getCharts().forEach(ch=>sh.removeChart(ch));
    const ch = sh.newChart()
      .setChartType(Charts.ChartType.COLUMN)
      .addRange(sh.getRange(chartStart, col, chartRows, 2)) // –ö–∞–Ω–∞–ª, –°–¥–µ–ª–∫–∏ (domain: –ö–∞–Ω–∞–ª)
      .addRange(sh.getRange(chartStart, col+3, chartRows, 1)) // –î–æ—Ö–æ–¥
      .setOption('title','–î–æ—Ö–æ–¥ –ø–æ –∫–∞–Ω–∞–ª–∞–º')
      .setOption('legend.position','none')
      .setOption('useFirstColumnAsDomain', true)
      .setOption('titleTextStyle',{fontSize:14,bold:true})
      .setOption('chartArea',{left:40,top:30,width:'80%',height:'60%'})
      .setPosition(chartStart+1, 11, 0, 0)
      .build();
    sh.insertChart(ch);
  } catch(e){}

  // –ü–û–ú–ï–°–Ø–ß–ù–ê–Ø –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø
  section_(sh,row,col,'üóìÔ∏è –ü–û–ú–ï–°–Ø–ß–ù–ê–Ø –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø',12,'#FFF3D9'); row++;
  const headM = ['–ú–µ—Å—è—Ü','–ö–∞–Ω–∞–ª','–°–¥–µ–ª–∫–∏','–£—Å–ø–µ—à–Ω—ã–µ','–î–æ—Ö–æ–¥ ‚ÇΩ','–†–∞—Å—Ö–æ–¥ ‚ÇΩ','CAC ‚ÇΩ','ROMI %','–°—Ä. —á–µ–∫ ‚ÇΩ','–ö–æ–Ω–≤–µ—Ä—Å–∏—è'];
  writeTable_(sh,row,col, headM, monthsRows);
  numberFmt_(sh,row+1,col+4,monthsRows.length,1,'#,##0');
  numberFmt_(sh,row+1,col+5,monthsRows.length,1,'#,##0');
  numberFmt_(sh,row+1,col+6,monthsRows.length,1,'#,##0');
  numberFmt_(sh,row+1,col+7,monthsRows.length,1,'0.00%');
  numberFmt_(sh,row+1,col+8,monthsRows.length,1,'#,##0');
  numberFmt_(sh,row+1,col+9,monthsRows.length,1,'0.00%');

  autoResize_(sh);
}

/* —Ç—Ä–∏–≥–≥–µ—Ä —Ä–∞–∑ –≤ —á–∞—Å */
function setHourlyTrigger_Marketing(){
  ScriptApp.getProjectTriggers()
    .filter(t=>t.getHandlerFunction()==='buildMarketingChannels')
    .forEach(t=>ScriptApp.deleteTrigger(t));
  ScriptApp.newTrigger('buildMarketingChannels').timeBased().everyHours(1).create();
}

/* ======================== –ß–¢–ï–ù–ò–ï –î–ê–ù–ù–´–• ======================== */
function readRA_(ss){
  const sh = ss.getSheetByName(MKT.RA_SHEET);
  if (!sh) throw new Error('–ù–µ—Ç –ª–∏—Å—Ç–∞ "'+MKT.RA_SHEET+'"');

  // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–æ–±—ã—á–Ω–æ 2)
  const peek = sh.getRange(1,1,Math.min(5,sh.getLastRow()||5), Math.min(250,sh.getLastColumn()||60)).getValues();
  let headerRow = 2;
  for (let r=0;r<peek.length;r++){
    const row = (peek[r]||[]).map(String);
    if (row.includes('ID') && (row.includes('–°—Ç–∞—Ç—É—Å') || row.includes('–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è'))) { headerRow=r+1; break; }
  }

  const lastRow = sh.getLastRow(), lastCol = sh.getLastColumn();
  if (lastRow < headerRow+1) return {rows:[], iAX:-1};

  const header = sh.getRange(headerRow,1,1,lastCol).getValues()[0].map(String);
  const rows   = sh.getRange(headerRow+1,1,lastRow-headerRow,lastCol).getValues();

  // –ò–Ω–¥–µ–∫—Å—ã –∫–æ–ª–æ–Ω–æ–∫
  const iCreated = findHead_(header, MKT.HEADERS.CREATED);
  const iClosed  = findHead_(header, MKT.HEADERS.CLOSED);     // –æ–ø—Ü
  const iStatus  = findHead_(header, MKT.HEADERS.STATUS);
  const iBudget  = findHead_(header, MKT.HEADERS.BUDGET);
  const iTelTag  = findHead_(header, MKT.HEADERS.TELTAG);
  const iUtm     = findHead_(header, MKT.HEADERS.UTM_SOURCE);
  const iLastFrm = findHead_(header, MKT.HEADERS.LAST_FORM);
  const iFormId  = findHead_(header, MKT.HEADERS.FORMID);
  const iFormNm  = findHead_(header, MKT.HEADERS.FORMNAME);
  const iReferer = findHead_(header, MKT.HEADERS.REFERER);
  const iDate    = findHead_(header, MKT.HEADERS.DATE);

  // –ø—Ä–∞–≤—ã–π "–°—É–º–º–∞ ‚ÇΩ" (AX)
  let iAX = -1;
  header.forEach((h,i)=>{ if (MKT.HEADERS.SUM_TITLE_RE.test(String(h||''))) iAX = i; });

  return {rows, header, iCreated, iClosed, iStatus, iBudget, iTelTag, iUtm, iLastFrm, iFormId, iFormNm, iReferer, iDate, iAX};
}

function readCosts_(ss){
  let sh = null;
  for (const name of MKT.COST_SHEET_NAMES){
    sh = ss.getSheetByName(name);
    if (sh) break;
  }
  const totalByChannel = new Map();
  const monthByChannel = new Map();
  if (!sh) return {totalByChannel, monthByChannel};

  const v = sh.getDataRange().getValues();
  if (!v.length) return {totalByChannel, monthByChannel};
  const head = (v[0]||[]).map(String);

  const iCh  = idxByRegex_(head, /–∫–∞–Ω–∞–ª/i);
  const iPer = idxByRegex_(head, /–ø–µ—Ä–∏–æ–¥|–º–µ—Å—è—Ü|month/i);  // YYYY-MM
  const iAmt = idxByRegex_(head, /—Ä–∞—Å—Ö–æ–¥|–±—é–¥–∂–µ—Ç|—Å—É–º–º/i);

  v.slice(1).forEach(r=>{
    const chRaw = String(r[iCh]||'').trim();
    const ch = normalizeChannelName_(chRaw);
    const per = String(r[iPer]||'').trim();   // –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ
    const amt = toNum_(r[iAmt]);
    if (!ch || !amt) return;

    totalByChannel.set(ch, (totalByChannel.get(ch)||0)+amt);
    if (per) monthByChannel.set(ch+'|'+per, (monthByChannel.get(ch+'|'+per)||0)+amt);
  });

  return {totalByChannel, monthByChannel};
}

/* ======================== –õ–û–ì–ò–ö–ê/–ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò ======================== */
function normalizeStatus_(raw){
  let s = String(raw||'').trim();
  // —É–±–∏—Ä–∞–µ–º "–í–°–ï –ë–ê–†–´ –°–ï–¢–ò ‚Äî ‚Ä¶", —Ö–≤–æ—Å—Ç—ã –ø–æ—Å–ª–µ —Ç–∏—Ä–µ –∏ —Ç.–¥.
  s = s.replace(/^\s*–≤—Å–µ\s*–±–∞—Ä—ã\s*—Å–µ—Ç–∏\s*(?:[\/\\|:\-‚Äì‚Äî]\s*)?/i,'')
       .replace(/\s*(?:-|‚Äì|‚Äî)\s*.*$/,'').trim();
  const rules = [
    [/–æ–ø–ª–∞—á/i,'–û–ø–ª–∞—á–µ–Ω–æ'],
    [/—É—Å–ø–µ—à.*–≤\s*—Ä–ø/i,'–£—Å–ø–µ—à–Ω–æ –≤ –†–ü'],
    [/—É—Å–ø–µ—à.*—Ä–µ–∞–ª–∏–∑/i,'–£—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'],
    [/–∑–∞–∫—Ä—ã—Ç–æ.*–Ω–µ.*—Ä–µ–∞–ª–∏–∑/i,'–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ'],
    [/–∫–æ–Ω—Ç—Ä–æ–ª.*–æ–ø–ª–∞—Ç/i,'–ö–æ–Ω—Ç—Ä–æ–ª—å –æ–ø–ª–∞—Ç—ã'],
    [/–ø–µ—Ä–µ–Ω–æ—Å.*–æ—Ç–∫—Ä—ã—Ç–æ–π.*–¥–∞—Ç/i,'–ü–µ—Ä–µ–Ω–æ—Å —Å –æ—Ç–∫—Ä—ã—Ç–æ–π –¥–∞—Ç–æ–π'],
    [/–≤–æ–ø—Ä–æ—Å.*–±–∞—Ä—É/i,'–í–æ–ø—Ä–æ—Å –∫ –±–∞—Ä—É'],
    [/–Ω–¥–∑|–Ω–µ\s*–¥–æ–∑–≤–æ–Ω/i,'–ù–î–ó'],
    [/–∞–≤—Ç–æ.*—Ä–∞—Å–ø—Ä–µ–¥–µ–ª/i,'–ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'],
    [/–≤–∑—è–ª.*–≤\s*—Ä–∞–±–æ—Ç—É|–≤ —Ä–∞–±–æ—Ç–µ/i,'–í–∑—è–ª–∏ –≤ —Ä–∞–±–æ—Ç—É'],
    [/–æ—Ç–º–µ–Ω–µ–Ω.*—Ä–µ—Å—Ç–æ–ø–ª–µ–π—Å/i,'–û—Ç–º–µ–Ω–µ–Ω –≤ –†–µ—Å—Ç–æ–ø–ª–µ–π—Å']
  ];
  for (const [re,n] of rules){ if (re.test(s)) return n; }
  return s || '–ù–æ–≤—ã–π –ª–∏–¥';
}

function pickChannel_(r, src){
  const tel = (src.iTelTag>-1 ? String(r[src.iTelTag]||'').trim() : '').toLowerCase();
  if (tel) return normalizeChannelName_(tel);

  const utm = (src.iUtm>-1 ? String(r[src.iUtm]||'').trim() : '').toLowerCase();
  if (utm) return normalizeChannelName_(utm);

  const hasForm = [src.iLastFrm, src.iFormId, src.iFormNm, src.iReferer, src.iDate]
    .some(i => i>-1 && String(r[i]||'').trim()!=='');
  if (hasForm) return 'direct_site';

  return '(–±–µ–∑ –∫–∞–Ω–∞–ª–∞)';
}

function normalizeChannelName_(name){
  const s = String(name||'').trim().toLowerCase();
  if (!s) return '';
  if (s === 'ya_map#booking') return 'ya_map';
  return s;
}

function monthKey_(d){
  const dt = (d instanceof Date) ? d : new Date(d);
  if (isNaN(dt)) return {key:'0000-00', label:'‚Äî'};
  const y = dt.getFullYear();
  const m = dt.getMonth()+1;
  const key = `${y}-${('0'+m).slice(-2)}`;
  const L = ['–Ø–ù–í','–§–ï–í','–ú–ê–†','–ê–ü–†','–ú–ê–ô','–ò–Æ–ù','–ò–Æ–õ','–ê–í–ì','–°–ï–ù','–û–ö–¢','–ù–û–Ø','–î–ï–ö'][m-1];
  return {key, label:`${L} ‚Äô${String(y).slice(-2)}`};
}

/* ======================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï ======================== */
function findHead_(header, variants){
  const norm = header.map(h=>String(h||'').trim().toLowerCase());
  for (const name of variants){
    const n = String(name).trim().toLowerCase();
    let i = norm.indexOf(n);
    if (i>-1) return i;
  }
  return -1;
}
function idxByRegex_(header, re){
  const norm = header.map(h=>String(h||''));
  for (let i=0;i<norm.length;i++) if (re.test(norm[i])) return i;
  return -1;
}
function toNum_(v){
  if (v==null || v==='') return 0;
  const n = Number(String(v).replace(/\s+/g,'').replace(',','.'));
  return isNaN(n) ? 0 : n;
}

/* –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ */
function setFontAll_(sh,font){
  sh.getRange(1,1,Math.max(1, sh.getMaxRows()), Math.max(1, sh.getMaxColumns()))
    .setFontFamily(font);
}
function band_(sh,row,col,rows,cols,bg){
  ensureSize_(sh,row+rows-1,col+cols-1);
  sh.getRange(row,col,rows,cols).setBackground(bg);
}
function section_(sh,row,col,text,width,bg){
  ensureSize_(sh,row,col+Math.max(1,width)-1);
  const rng = sh.getRange(row,col,1,Math.max(1,width));
  try{ rng.merge(); }catch(e){}
  rng.setValue(text).setBackground(bg).setFontWeight('bold')
     .setBorder(null,null,true,null,false,false,'#9EB6E7',SpreadsheetApp.BorderStyle.SOLID)
     .setFontSize(13);
}
function writeTable_(sh,row,col,header,data){
  ensureSize_(sh,row+Math.max(1,data.length),col+header.length-1);
  const h = sh.getRange(row,col,1,header.length);
  h.setValues([header]).setFontWeight('bold').setBackground('#E9F2FB');
  if (data.length){
    const rng = sh.getRange(row+1,col,data.length,header.length);
    rng.setValues(data.map(r=>r.map(v => (v===null||v===undefined||!isFiniteNum_(v)? v : Number(v)))));
    // —Å–µ—Ç–∫–∞ + –∑–µ–±—Ä–∞
    rng.setBorder(true,true,true,true,true,true);
    const bgs = [];
    for (let i=0;i<data.length;i++){
      bgs.push(new Array(header.length).fill(i%2===0?'#FFFFFF':'#F8FCFF'));
    }
    rng.setBackgrounds(bgs);
  }
}
function isFiniteNum_(v){ return typeof v==='number' && isFinite(v); }
function numberFmt_(sh,row,col,nRows,nCols,fmt){
  if (nRows<=0 || nCols<=0) return;
  sh.getRange(row,col,nRows,nCols).setNumberFormat(fmt);
}
function ensureSize_(sh,needRow,needCol){
  if (sh.getMaxRows() < needRow) sh.insertRowsAfter(sh.getMaxRows(), needRow - sh.getMaxRows());
  if (sh.getMaxColumns() < needCol) sh.insertColumnsAfter(sh.getMaxColumns(), needCol - sh.getMaxColumns());
}
function autoResize_(sh){
  const c = sh.getLastColumn();
  for (let i=1;i<=c;i++) try{ sh.autoResizeColumn(i); }catch(e){}
}

/* —É–¥–æ–±–Ω–æ–µ –º–µ–Ω—é */
function onOpen(){
  SpreadsheetApp.getUi()
    .createMenu('üìä –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥')
    .addItem('–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –æ—Ç—á—ë—Ç', 'buildMarketingChannels')
    .addItem('Hourly-—Ç—Ä–∏–≥–≥–µ—Ä', 'setHourlyTrigger_Marketing')
    .addToUi();
}
