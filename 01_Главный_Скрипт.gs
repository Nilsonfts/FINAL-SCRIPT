/**
 * –ì–õ–ê–í–ù–´–ô –°–ö–†–ò–ü–¢ –°–ò–°–¢–ï–ú–´ –ê–ù–ê–õ–ò–¢–ò–ö–ò
 * –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –º–æ–¥—É–ª—è–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
 * @fileoverview –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–∏—Å—Ç–µ–º—ã –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 */

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
 * –°–æ–∑–¥–∞—ë—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ª–∏—Å—Ç—ã, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏ –º–µ–Ω—é
 */
function initializeSystem() {
  try {
    logInfo_('SYSTEM_INIT', '–ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã');
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    validateConfiguration_();
    
    // 2. –°–æ–∑–¥–∞—ë–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ª–∏—Å—Ç—ã
    createAllSheets_();
    
    // 3. –ü—Ä–∏–º–µ–Ω—è–µ–º –µ–¥–∏–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
    applySystemWideFormatting_();
    
    // 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã
    setupTriggers_();
    
    // 5. –°–æ–∑–¥–∞—ë–º –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ UI –¥–æ—Å—Ç—É–ø–µ–Ω)
    try {
      createCustomMenu_();
    } catch (uiError) {
      logInfo_('SYSTEM_INIT', '–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –ø—Ä–æ–ø—É—â–µ–Ω–æ (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω UI –∫–æ–Ω—Ç–µ–∫—Å—Ç)');
    }
    
    // 6. –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤–∏—á–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    logInfo_('SYSTEM_INIT', '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
    syncAllData();
    
    // 7. –°–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    createMainDashboard_();
    
    logInfo_('SYSTEM_INIT', '–°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ UI –¥–æ—Å—Ç—É–ø–µ–Ω)
    try {
      SpreadsheetApp.getUi().alert(
        '–°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!',
        '–í—Å–µ –º–æ–¥—É–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ.\n\n' +
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç.\n' +
        '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á—ë—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 08:00.\n\n' +
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é "üîÑ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞" –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
    } catch (uiError) {
      logInfo_('SYSTEM_INIT', 'UI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω UI –∫–æ–Ω—Ç–µ–∫—Å—Ç)');
    }
    
  } catch (error) {
    logError_('SYSTEM_INIT', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã', error);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ UI –¥–æ—Å—Ç—É–ø–µ–Ω)
    try {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏!',
        `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã:\n\n${error.message}\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`,
        SpreadsheetApp.getUi().ButtonSet.OK
      );
    } catch (uiError) {
      logError_('SYSTEM_INIT', 'UI –æ—à–∏–±–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω UI –∫–æ–Ω—Ç–µ–∫—Å—Ç)', uiError);
    }
    
    throw error;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
 */
/**
 * üéØ –£–ü–†–û–©–ï–ù–ù–ê–Ø –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –§–û–ö–£–° –ù–ê –†–ê–ë–û–ß–ò–ô –ê–ú–û
 * –¢–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞ —Ñ–∞–π–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
 */
function runFullAnalyticsUpdate() {
  try {
    logInfo_('FULL_UPDATE', '–ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ —Ñ–∞–π–ª–∞ –†–ê–ë–û–ß–ò–ô –ê–ú–û');
    const startTime = new Date();
    
    // üéØ –ï–î–ò–ù–°–¢–í–ï–ù–ù–ê–Ø –ó–ê–î–ê–ß–ê: –°–æ–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª –†–ê–ë–û–ß–ò–ô –ê–ú–û —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º
    buildWorkingAmoFile();
    
    const endTime = new Date();
    const duration = Math.round((endTime - startTime) / 1000);
    
    logInfo_('FULL_UPDATE', `–§–∞–π–ª –†–ê–ë–û–ß–ò–ô –ê–ú–û —Å–æ–±—Ä–∞–Ω –∑–∞ ${duration} —Å–µ–∫`);
    
  } catch (error) {
    logError_('FULL_UPDATE', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –†–ê–ë–û–ß–ò–ô –ê–ú–û', error);
    throw error;
  }
    
// ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–ò–°–¢–ï–ú–´ =====

/**
 * –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏)
 */
function logInfo_(module, message, details = null) {
  const timestamp = new Date().toLocaleTimeString();
  console.log(`${timestamp}\t–ò–Ω—Ñ–æ\t[${module}] ${message}${details ? ': ' + JSON.stringify(details) : ''}`);
}

function logError_(module, message, error = null) {
  const timestamp = new Date().toLocaleTimeString();
  console.error(`${timestamp}\t–û—à–∏–±–∫–∞\t[ERROR] ${module}: ${message}${error ? ' [' + error.toString() + ']' : ''}`);
}

function logWarning_(module, message, details = null) {
  const timestamp = new Date().toLocaleTimeString();
  console.warn(`${timestamp}\t–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\t[WARNING] ${module}: ${message}${details ? ': ' + JSON.stringify(details) : ''}`);
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã
 */
function validateConfiguration_() {
  logInfo_('CONFIG_CHECK', '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  if (!CONFIG) {
    throw new Error('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è CONFIG –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  if (!CONFIG.SHEETS) {
    throw new Error('–°–µ–∫—Ü–∏—è SHEETS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
  }
  
  logInfo_('CONFIG_CHECK', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞');
}

/**
 * üéØ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –°–ë–û–†–ö–ò –†–ê–ë–û–ß–ï–ì–û –ê–ú–û
 * –°–æ–∑–¥–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ç–æ—á–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
 */
function buildWorkingAmoFile() {
  console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É —Ñ–∞–π–ª–∞ –†–ê–ë–û–ß–ò–ô –ê–ú–û');
  
  try {
    const workingSheet = getSheet_(getSheetName_('WORKING_AMO'));
    workingSheet.clear();
    
    // 1. –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å —Ç–æ—á–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
    createWorkingAmoHeaders_(workingSheet);
    
    // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    const consolidatedData = consolidateAllDataSources_();
    
    // 3. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    writeConsolidatedData_(workingSheet, consolidatedData);
    
    // 4. –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
    applyWorkingAmoFormatting_(workingSheet, consolidatedData.length);
    
    console.log(`‚úÖ –§–∞–π–ª –†–ê–ë–û–ß–ò–ô –ê–ú–û —Å–æ–±—Ä–∞–Ω: ${consolidatedData.length} –∑–∞–ø–∏—Å–µ–π`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –†–ê–ë–û–ß–ò–ô –ê–ú–û:', error);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ–Ω—é
 */
function createCustomMenu_() {
  const ui = SpreadsheetApp.getUi();
  
  ui.createMenu('üîÑ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞')
    .addSubMenu(ui.createMenu('üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö')
      .addItem('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö', 'syncAllData')
      .addItem('üíº –¢–æ–ª—å–∫–æ AmoCRM', 'syncAmoCrmDataOnly')
      .addItem('üìã –¢–æ–ª—å–∫–æ —Ñ–æ—Ä–º—ã —Å–∞–π—Ç–∞', 'syncWebFormsDataOnly')
      .addItem('‚òéÔ∏è –¢–æ–ª—å–∫–æ –∫–æ–ª–ª-—Ç—Ä–µ–∫–∏–Ω–≥', 'syncCallTrackingDataOnly')
      .addSeparator()
      .addItem('üéØ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞', 'syncYandexMetricaDataOnly'))
    
    .addSubMenu(ui.createMenu('üìà –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á—ë—Ç—ã')
      .addItem('üè¢ –°–≤–æ–¥–∫–∞ AmoCRM', 'updateAmoCrmSummary')
      .addItem('‚ùå –ê–Ω–∞–ª–∏–∑ –æ—Ç–∫–∞–∑–æ–≤', 'analyzeRefusalReasons')
      .addItem('üéØ –ö–∞–Ω–∞–ª—ã –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è', 'analyzeChannelPerformance')
      .addItem('üë• –õ–∏–¥—ã –ø–æ –∫–∞–Ω–∞–ª–∞–º', 'analyzeLeadsByChannels')
      .addItem('üîó UTM –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', 'analyzeUtmPerformance')
      .addItem('üëã –ü–µ—Ä–≤—ã–µ –∫–∞—Å–∞–Ω–∏—è', 'analyzeFirstTouchAttribution')
      .addSeparator()
      .addItem('üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'updateDailyStatistics')
      .addItem('üìä –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—á—ë—Ç—ã', 'runFullAnalyticsUpdate'))
    
    .addSubMenu(ui.createMenu('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
      .addItem('üé® –ü—Ä–∏–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ', 'applySystemWideFormatting_')
      .addItem('üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã', 'setupTriggers_')
      .addItem('üìß –¢–µ—Å—Ç email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', 'testEmailNotifications')
      .addSeparator()
      .addItem('üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à', 'clearAllCache')
      .addItem('üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏', 'showSystemLogs'))
    
    .addSeparator()
    .addItem('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã', 'initializeSystem')
    .addItem('‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ', 'showSystemInfo')
    .addToUi();
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã
 * @private
 */
function validateConfiguration_() {
  const requiredProperties = [
    'OPENAI_API_KEY'
  ];
  
  const properties = PropertiesService.getScriptProperties();
  const missingProperties = [];
  
  requiredProperties.forEach(prop => {
    if (!properties.getProperty(prop)) {
      missingProperties.push(prop);
    }
  });
  
  if (missingProperties.length > 0) {
    throw new Error(`–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: ${missingProperties.join(', ')}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Google Sheets API
  try {
    SpreadsheetApp.getActiveSpreadsheet().getId();
  } catch (error) {
    throw new Error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets API');
  }
  
  logInfo_('CONFIG_CHECK', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
}

/**
 * –°–æ–∑–¥–∞—ë—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ª–∏—Å—Ç—ã
 * @private
 */
function createAllSheets_() {
  const requiredSheets = Object.values(CONFIG.SHEETS);
  
  requiredSheets.forEach(sheetName => {
    try {
      getOrCreateSheet_(sheetName);
      logInfo_('SHEET_CREATE', `–õ–∏—Å—Ç "${sheetName}" —Å–æ–∑–¥–∞–Ω –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    } catch (error) {
      logError_('SHEET_CREATE', `–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ "${sheetName}"`, error);
    }
  });
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –µ–¥–∏–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–æ –≤—Å–µ–º –ª–∏—Å—Ç–∞–º
 * @private
 */
function applySystemWideFormatting_() {
  logInfo_('FORMATTING', '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –µ–¥–∏–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è');
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º PT Sans –∫–æ –≤—Å–µ–º –ª–∏—Å—Ç–∞–º
  applyPtSansAllSheets_();
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–æ–≤
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheets = spreadsheet.getSheets();
  
  sheets.forEach(sheet => {
    try {
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã—Å–æ—Ç–∞ —Å—Ç—Ä–æ–∫
      sheet.setRowHeights(1, sheet.getMaxRows(), 25);
      
      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
      sheet.setColumnWidths(1, sheet.getMaxColumns(), 120);
      
      // –ó–∞–º–æ—Ä–æ–∑–∫–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
      if (sheet.getLastRow() > 0) {
        sheet.setFrozenRows(1);
      }
      
    } catch (error) {
      logWarning_('FORMATTING', `–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–∏—Å—Ç–∞ "${sheet.getName()}"`, error);
    }
  });
  
  logInfo_('FORMATTING', '–ï–¥–∏–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
 * @private
 */
function setupTriggers_() {
  try {
    logInfo_('TRIGGERS', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤');
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
    const existingTriggers = ScriptApp.getProjectTriggers();
    existingTriggers.forEach(trigger => {
      ScriptApp.deleteTrigger(trigger);
    });
    
    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
    
    // 1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
    ScriptApp.newTrigger('syncAllData')
      .timeBased()
      .everyMinutes(15)
      .create();
    
    // 2. –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 08:00
    ScriptApp.newTrigger('runFullAnalyticsUpdate')
      .timeBased()
      .everyDays(1)
      .atHour(8)
      .create();
    
    // 3. –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –≤ 09:00
    ScriptApp.newTrigger('sendWeeklyReport')
      .timeBased()
      .onWeekDay(ScriptApp.WeekDay.MONDAY)
      .atHour(9)
      .create();
    
    // 4. –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –æ—Ç–∫–∞–∑–æ–≤ –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ (–¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ GPT –∞–Ω–∞–ª–∏–∑–∞)
    ScriptApp.newTrigger('analyzeRefusalReasons')
      .timeBased()
      .everyHours(2)
      .create();
    
    logInfo_('TRIGGERS', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    
  } catch (error) {
    logError_('TRIGGERS', '–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤', error);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞—ë—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–∞—à–±–æ—Ä–¥–∞
 * @private
 */
function createMainDashboard_() {
  const sheet = getOrCreateSheet_('–ì–ª–∞–≤–Ω–∞—è');
  clearSheetData_(sheet);
  
  // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ª–∏—Å—Ç –≤ –Ω–∞—á–∞–ª–æ
  sheet.activate();
  SpreadsheetApp.getActiveSpreadsheet().moveActiveSheet(1);
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∏—Å—Ç–µ–º—ã
  sheet.getRange('A1:H1').merge();
  sheet.getRange('A1').setValue('üìä –°–ò–°–¢–ï–ú–ê –ú–ê–†–ö–ï–¢–ò–ù–ì–û–í–û–ô –ê–ù–ê–õ–ò–¢–ò–ö–ò');
  sheet.getRange('A1').setFontSize(24).setFontWeight('bold').setHorizontalAlignment('center');
  applyHeaderStyle_(sheet.getRange('A1'));
  
  let currentRow = 3;
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
  const systemInfo = [
    ['üìà –ú–æ–¥—É–ª—å', 'üìä –°—Ç–∞—Ç—É—Å', 'üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ', 'üìù –û–ø–∏—Å–∞–Ω–∏–µ'],
    ['AmoCRM –°–≤–æ–¥–∫–∞', '–ì–æ—Ç–æ–≤', '', '–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ —Å–¥–µ–ª–∫–∞–º –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏'],
    ['–ê–Ω–∞–ª–∏–∑ –æ—Ç–∫–∞–∑–æ–≤', '–ì–æ—Ç–æ–≤', '', 'AI-–∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –æ—Ç–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤'],
    ['–ö–∞–Ω–∞–ª—ã –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è', '–ì–æ—Ç–æ–≤', '', '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤'],
    ['–õ–∏–¥—ã –ø–æ –∫–∞–Ω–∞–ª–∞–º', '–ì–æ—Ç–æ–≤', '', '–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏–¥–æ–≤ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º'],
    ['UTM –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', '–ì–æ—Ç–æ–≤', '', '–ê–Ω–∞–ª–∏–∑ UTM –º–µ—Ç–æ–∫ –∏ –∫–∞–º–ø–∞–Ω–∏–π'],
    ['–ü–µ—Ä–≤—ã–µ –∫–∞—Å–∞–Ω–∏—è', '–ì–æ—Ç–æ–≤', '', '–ê—Ç—Ä–∏–±—É—Ü–∏—è –ø–µ—Ä–≤—ã—Ö –∫–∞—Å–∞–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤'],
    ['–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–ì–æ—Ç–æ–≤', '', '–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ –¥–Ω—è–º'],
    ['–ö–æ–ª–ª-—Ç—Ä–µ–∫–∏–Ω–≥', '–ì–æ—Ç–æ–≤', '', '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–≤–æ–Ω–∫–æ–≤ –∏ –∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤'],
    ['–ê–Ω–∞–ª–∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤', '–ì–æ—Ç–æ–≤', '', '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤']
  ];
  
  sheet.getRange(currentRow, 1, systemInfo.length, 4).setValues(systemInfo);
  applySubheaderStyle_(sheet.getRange(currentRow, 1, 1, 4));
  currentRow += systemInfo.length + 2;
  
  // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  sheet.getRange(currentRow, 1, 1, 4).merge();
  sheet.getRange(currentRow, 1).setValue('‚ö° –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø');
  applyHeaderStyle_(sheet.getRange(currentRow, 1));
  currentRow++;
  
  const quickActions = [
    ['üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ', '‚Üí –ú–µ–Ω—é: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Üí –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö'],
    ['üìä –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—á—ë—Ç—ã', '‚Üí –ú–µ–Ω—é: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Üí –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Ç—á—ë—Ç—ã'],
    ['‚ùå –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –æ—Ç–∫–∞–∑–æ–≤', '‚Üí –ú–µ–Ω—é: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Üí –ê–Ω–∞–ª–∏–∑ –æ—Ç–∫–∞–∑–æ–≤'],
    ['üéØ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–Ω–∞–ª–æ–≤', '‚Üí –ú–µ–Ω—é: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Üí –ö–∞–Ω–∞–ª—ã –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è'],
    ['üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', '‚Üí –ú–µ–Ω—é: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏']
  ];
  
  sheet.getRange(currentRow, 1, quickActions.length, 2).setValues(quickActions);
  sheet.getRange(currentRow, 1, quickActions.length, 1).setFontWeight('bold');
  currentRow += quickActions.length + 2;
  
  // –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  sheet.getRange(currentRow, 1, 1, 4).merge();
  sheet.getRange(currentRow, 1).setValue('‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï');
  applyHeaderStyle_(sheet.getRange(currentRow, 1));
  currentRow++;
  
  const sysInfo = [
    ['–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã:', '1.0.0'],
    ['–î–∞—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', formatDate_(getCurrentDateMoscow_(), 'full')],
    ['–ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:', '–ö–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç'],
    ['–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–æ–≤:', '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 08:00'],
    ['–ê–Ω–∞–ª–∏–∑ GPT:', '–ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞'],
    ['Email –æ—Ç—á—ë—Ç—ã:', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∏ –≤ 09:00']
  ];
  
  sheet.getRange(currentRow, 1, sysInfo.length, 2).setValues(sysInfo);
  sheet.getRange(currentRow, 1, sysInfo.length, 1).setFontWeight('bold');
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  sheet.autoResizeColumns(1, 4);
  applyDataStyle_(sheet.getRange(3, 1, currentRow - 3 + sysInfo.length, 4));
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ –º–æ–¥—É–ª–µ–π
 * @param {Object} updateResults - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª–µ–π
 * @private
 */
function updateMainDashboard_(updateResults) {
  const sheet = getSheet_('–ì–ª–∞–≤–Ω–∞—è');
  if (!sheet) return;
  
  const now = formatDate_(getCurrentDateMoscow_(), 'DD.MM.YYYY HH:MM');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –º–æ–¥—É–ª–µ–π (—Å—Ç—Ä–æ–∫–∏ 4-13)
  Object.entries(updateResults).forEach((entry, index) => {
    const [module, success] = entry;
    const row = 4 + index;
    
    if (row <= 13) { // –ó–∞—â–∏—Ç–∞ –æ—Ç –≤—ã—Ö–æ–¥–∞ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
      sheet.getRange(row, 2).setValue(success ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –û—à–∏–±–∫–∞');
      sheet.getRange(row, 3).setValue(success ? now : '–û—à–∏–±–∫–∞');
      
      // –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è
      const statusCell = sheet.getRange(row, 2);
      statusCell.setBackground(success ? CONFIG.COLORS.SUCCESS_LIGHT : CONFIG.COLORS.ERROR_LIGHT);
    }
  });
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –ø–æ email
 * @param {Object} updateResults - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 * @private
 */
function sendDailyReports_(updateResults) {
  const recipients = CONFIG.EMAIL_NOTIFICATIONS.RECIPIENTS;
  if (!recipients || recipients.length === 0) return;
  
  const successCount = Object.values(updateResults).filter(Boolean).length;
  const totalModules = Object.keys(updateResults).length;
  const date = formatDate_(getCurrentDateMoscow_(), 'DD.MM.YYYY');
  
  const subject = `üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á—ë—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∑–∞ ${date}`;
  
  let body = `–û—Ç—á—ë—Ç –æ —Ä–∞–±–æ—Ç–µ —Å–∏—Å—Ç–µ–º—ã –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏\n\n`;
  body += `üìÖ –î–∞—Ç–∞: ${date}\n`;
  body += `‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${successCount} –∏–∑ ${totalModules} –º–æ–¥—É–ª–µ–π\n\n`;
  
  body += `–°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π:\n`;
  Object.entries(updateResults).forEach(([module, success]) => {
    const status = success ? '‚úÖ' : '‚ùå';
    const moduleName = module.replace(/_/g, ' ').toUpperCase();
    body += `${status} ${moduleName}\n`;
  });
  
  if (successCount < totalModules) {
    body += `\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–æ–¥—É–ª–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã.\n`;
  }
  
  body += `\nüìä –°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç—á—ë—Ç—ã: ${SpreadsheetApp.getActiveSpreadsheet().getUrl()}\n`;
  body += `\n---\n–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á—ë—Ç —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏`;
  
  try {
    MailApp.sendEmail({
      to: recipients.join(','),
      subject: subject,
      body: body
    });
    
    logInfo_('EMAIL_REPORT', `–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ ${recipients.length} –∞–¥—Ä–µ—Å–æ–≤`);
    
  } catch (error) {
    logError_('EMAIL_REPORT', '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞', error);
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
 */
function showSystemInfo() {
  const message = `
üìä –°–ò–°–¢–ï–ú–ê –ú–ê–†–ö–ï–¢–ò–ù–ì–û–í–û–ô –ê–ù–ê–õ–ò–¢–ò–ö–ò

üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–ï–¥–∏–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ-–ø—Ä–æ–¥–∞–∂–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å –∞–≤—Ç–æ—Å–±–æ—Ä–æ–º –¥–∞–Ω–Ω—ã—Ö, –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π, AI-—Ä–∞–∑–±–æ—Ä–æ–º –ø—Ä–∏—á–∏–Ω –æ—Ç–∫–∞–∑–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏

üìà –§—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ AmoCRM, —Ñ–æ—Ä–º —Å–∞–π—Ç–∞, –∫–æ–ª–ª-—Ç—Ä–µ–∫–∏–Ω–≥–∞
‚Ä¢ AI-–∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –æ—Ç–∫–∞–∑–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º GPT-4
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã ¬´–∑–∞ –≤—Å—ë –≤—Ä–µ–º—è¬ª –∏ ¬´–ø–æ –º–µ—Å—è—Ü–∞–º¬ª
‚Ä¢ 12 —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ email –æ—Ç—á—ë—Ç—ã

‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
‚Ä¢ 16 –º–æ–¥—É–ª–µ–π Google Apps Script
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI GPT-4o-mini
‚Ä¢ –ú–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
‚Ä¢ PT Sans —à—Ä–∏—Ñ—Ç –≤–æ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º–µ
‚Ä¢ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç

üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞:
–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –¥–æ—Ä–∞–±–æ—Ç–æ–∫ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É
  `;
  
  SpreadsheetApp.getUi().alert('–û —Å–∏—Å—Ç–µ–º–µ', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –û—á–∏—â–∞–µ—Ç –≤–µ—Å—å –∫—ç—à —Å–∏—Å—Ç–µ–º—ã
 */
function clearAllCache() {
  try {
    CacheService.getScriptCache().removeAll(['headers_cache', 'utm_cache', 'channels_cache']);
    CacheService.getDocumentCache().removeAll(['daily_stats', 'monthly_stats']);
    
    logInfo_('CACHE_CLEAR', '–í–µ—Å—å –∫—ç—à —Å–∏—Å—Ç–µ–º—ã –æ—á–∏—â–µ–Ω');
    
    SpreadsheetApp.getUi().alert(
      '–ö—ç—à –æ—á–∏—â–µ–Ω',
      '–ö—ç—à —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω—ã –∑–∞–Ω–æ–≤–æ.',
      SpreadsheetApp.getUi().ButtonSet.OK
    );
    
  } catch (error) {
    logError_('CACHE_CLEAR', '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞', error);
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏
 */
function showSystemLogs() {
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –∏–∑ Properties
  const properties = PropertiesService.getScriptProperties();
  const logsJson = properties.getProperty('SYSTEM_LOGS') || '[]';
  
  try {
    const logs = JSON.parse(logsJson);
    const recentLogs = logs.slice(-50); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∑–∞–ø–∏—Å–µ–π
    
    let message = '–ü–û–°–õ–ï–î–ù–ò–ï –ó–ê–ü–ò–°–ò –õ–û–ì–ê:\n\n';
    
    if (recentLogs.length === 0) {
      message += '–õ–æ–≥–∏ –ø—É—Å—Ç—ã –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.';
    } else {
      recentLogs.forEach(log => {
        message += `[${log.timestamp}] ${log.level} ${log.module}: ${log.message}\n`;
      });
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ HTML –¥–∏–∞–ª–æ–≥–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const htmlOutput = HtmlService
      .createHtmlOutput(`<pre style="font-family: monospace; font-size: 12px; white-space: pre-wrap;">${message}</pre>`)
      .setWidth(800)
      .setHeight(600);
    
    SpreadsheetApp.getUi().showModalDialog(htmlOutput, '–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏');
    
  } catch (error) {
    SpreadsheetApp.getUi().alert(
      '–û—à–∏–±–∫–∞',
      '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏: ' + error.message,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function testEmailNotifications() {
  try {
    const recipients = CONFIG.EMAIL_NOTIFICATIONS.RECIPIENTS;
    
    if (!recipients || recipients.length === 0) {
      SpreadsheetApp.getUi().alert(
        '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ email',
        'Email –∞–¥—Ä–µ—Å–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ CONFIG.EMAIL_NOTIFICATIONS.RECIPIENTS',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    const subject = 'üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏';
    const body = `–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.\n\n–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${formatDate_(getCurrentDateMoscow_(), 'full')}\n\n–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.`;
    
    MailApp.sendEmail({
      to: recipients.join(','),
      subject: subject,
      body: body
    });
    
    SpreadsheetApp.getUi().alert(
      '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω',
      `–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ${recipients.length} –∞–¥—Ä–µ—Å–æ–≤:\n${recipients.join('\n')}`,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
    
  } catch (error) {
    SpreadsheetApp.getUi().alert(
      '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏',
      `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ:\n${error.message}`,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  }
}

/**
 * –ß—Ç–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ —É—Ç–∏–ª–∏—Ç–∞–º–∏
 */
function readTable(ss, sheetName) {
  const sh = ss.getSheetByName(sheetName);
  if (!sh) {
    Logger.log(`‚ö† –õ–∏—Å—Ç "${sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return { header: [], rows: [] };
  }
  
  const values = sh.getDataRange().getValues();
  if (!values || values.length === 0) return { header: [], rows: [] };
  
  const header = (values[0] || []).map(String);
  const rows = values.slice(1).filter(r => r.some(x => String(x).trim() !== ''));
  
  return { header, rows };
}

/**
 * –ö–∞–Ω–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –ø–æ —Å–ª–æ–≤–∞—Ä—é
 */
function canonHeaders(table, mapping) {
  const header = [...table.header];
  
  // –ò—â–µ–º —Å–∏–Ω–æ–Ω–∏–º—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
  for (const [canonical, synonyms] of Object.entries(mapping)) {
    const idx = findColumnIndex(header, synonyms);
    if (idx > -1) {
      header[idx] = canonical;
    }
  }
  
  return { header, rows: table.rows };
}

/**
 * –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø–æ –∫–ª—é—á—É
 */
function mergeByKey(tables, keyField) {
  if (tables.length === 0) return { header: [], rows: [] };
  
  const masterTable = tables[0];
  const keyIdx = masterTable.header.indexOf(keyField);
  if (keyIdx === -1) throw new Error(`–ö–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ "${keyField}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
  
  // –°–æ–∑–¥–∞—ë–º –∏–Ω–¥–µ–∫—Å –ø–æ –∫–ª—é—á—É –¥–ª—è –ø–µ—Ä–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
  const keyToRowIndex = new Map();
  masterTable.rows.forEach((row, idx) => {
    const key = String(row[keyIdx] || '').trim();
    if (key) keyToRowIndex.set(key, idx);
  });
  
  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
  for (let t = 1; t < tables.length; t++) {
    const table = tables[t];
    const tableKeyIdx = table.header.indexOf(keyField);
    if (tableKeyIdx === -1) continue;
    
    // –ù–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏
    const newColumns = [];
    table.header.forEach((col, idx) => {
      if (!masterTable.header.includes(col)) {
        masterTable.header.push(col);
        newColumns.push(idx);
      }
    });
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏, —Ä–∞—Å—à–∏—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏
    if (newColumns.length > 0) {
      masterTable.rows.forEach(row => {
        for (let i = 0; i < newColumns.length; i++) {
          row.push('');
        }
      });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    table.rows.forEach(row => {
      const key = String(row[tableKeyIdx] || '').trim();
      if (!key) return;
      
      const existingIdx = keyToRowIndex.get(key);
      if (existingIdx !== undefined) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
        table.header.forEach((col, colIdx) => {
          const masterColIdx = masterTable.header.indexOf(col);
          if (masterColIdx > -1 && row[colIdx] != null && row[colIdx] !== '') {
            masterTable.rows[existingIdx][masterColIdx] = row[colIdx];
          }
        });
      } else {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        const newRow = new Array(masterTable.header.length).fill('');
        table.header.forEach((col, colIdx) => {
          const masterColIdx = masterTable.header.indexOf(col);
          if (masterColIdx > -1) {
            newRow[masterColIdx] = row[colIdx];
          }
        });
        masterTable.rows.push(newRow);
        keyToRowIndex.set(key, masterTable.rows.length - 1);
      }
    });
  }
  
  return masterTable;
}

/**
 * –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∞–≥—Ä–µ–≥–∞—Ç–æ–≤ –¥–ª—è Reserves/Guests
 */
function buildAggregates(rows, phoneIndex) {
  const agg = new Map();
  if (phoneIndex === -1 || !rows.length) return agg;
  
  rows.forEach(row => {
    const phone = cleanPhone(row[phoneIndex]);
    if (!phone) return;
    
    const existing = agg.get(phone) || { visits: 0, amount: 0, total: 0 };
    existing.visits++;
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—É–º–º—ã –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö
    for (let i = 0; i < row.length; i++) {
      const val = toNumber(row[i]);
      if (val > 0 && val < 1000000) { // –†–∞–∑—É–º–Ω—ã–µ —Å—É–º–º—ã
        existing.amount += val;
        existing.total += val;
      }
    }
    
    agg.set(phone, existing);
  });
  
  return agg;
}

/**
 * –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –∫–æ–ª–ª-—Ç—Ä–µ–∫–∏–Ω–≥–∞
 */
function buildCalltrackingMap(callTable) {
  const map = new Map();
  if (!callTable.rows.length) return map;
  
  const phoneIdx = findColumnIndex(callTable.header, ['–¢–µ–ª–µ—Ñ–æ–Ω', 'Phone', '–ù–æ–º–µ—Ä']);
  const tagIdx = findColumnIndex(callTable.header, ['–¢–µ–≥', 'Tag', '–ò—Å—Ç–æ—á–Ω–∏–∫']);
  
  if (phoneIdx === -1 || tagIdx === -1) return map;
  
  callTable.rows.forEach(row => {
    const phone = cleanPhone(row[phoneIdx]);
    const tag = cleanString(row[tagIdx]);
    if (phone && tag) {
      map.set(phone, tag);
    }
  });
  
  return map;
}

/**
 * –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ–±–æ–≥–∞—â—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
function buildEnrichedData(merged, siteTable, resAgg, gueAgg, ctMap, CFG) {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫
  const baseOrder = [
    '–°–¥–µ–ª–∫–∞.ID', '–°–¥–µ–ª–∫–∞.–ù–∞–∑–≤–∞–Ω–∏–µ', '–°–¥–µ–ª–∫–∞.–°—Ç–∞—Ç—É—Å', '–°–¥–µ–ª–∫–∞.–ë—é–¥–∂–µ—Ç',
    '–°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–ö–æ–Ω—Ç–∞–∫—Ç.–¢–µ–ª–µ—Ñ–æ–Ω', '–ö–æ–Ω—Ç–∞–∫—Ç.–§–ò–û',
    '–°–¥–µ–ª–∫–∞.utm_source', '–°–¥–µ–ª–∫–∞.utm_medium', '–°–¥–µ–ª–∫–∞.utm_campaign'
  ];
  
  const headerOrderedRaw = [...baseOrder];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ merged
  merged.header.forEach(col => {
    if (!headerOrderedRaw.includes(col)) {
      headerOrderedRaw.push(col);
    }
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ –æ–±–æ–≥–∞—â–µ–Ω–∏—è
  headerOrderedRaw.push(
    'R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏',
    'Reserves.–í–∏–∑–∏—Ç—ã', 'Reserves.–°—É–º–º–∞', 'Reserves.–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç',
    'Guests.–í–∏–∑–∏—Ç—ã', 'Guests.–û–±—â–∞—è —Å—É–º–º–∞', 'Guests.–ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç', 'Guests.–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç',
    '–°—É–º–º–∞ ‚ÇΩ', '–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞'
  );
  
  // –°—Ç—Ä–æ–∏–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è merged
  const indices = {};
  headerOrderedRaw.forEach(col => {
    indices[col] = merged.header.indexOf(col);
  });
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏
  const rows = merged.rows.map(row => {
    const out = [];
    
    // –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è
    headerOrderedRaw.forEach(col => {
      const idx = indices[col];
      if (idx > -1) {
        let val = row[idx];
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
        if (col === '–°–¥–µ–ª–∫–∞.–°—Ç–∞—Ç—É—Å') {
          val = normalizeStatus(val);
        } else if (col === '–ö–æ–Ω—Ç–∞–∫—Ç.–¢–µ–ª–µ—Ñ–æ–Ω') {
          val = cleanPhone(val);
        } else if (col === '–°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è') {
          val = formatDate(val);
        }
        
        out.push(val || '');
      } else {
        out.push('');
      }
    });
    
    // –û–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
    const phone = cleanPhone(row[indices['–ö–æ–Ω—Ç–∞–∫—Ç.–¢–µ–ª–µ—Ñ–æ–Ω']]);
    
    // –ö–æ–ª–ª-—Ç—Ä–µ–∫–∏–Ω–≥
    const ctIdx = out.length - 8; // –ü–æ–∑–∏—Ü–∏—è R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏
    out[ctIdx] = ctMap.get(phone) || '';
    
    // Reserves
    const res = resAgg.get(phone);
    out[ctIdx + 1] = res?.visits || 0;
    out[ctIdx + 2] = res?.amount || 0;
    out[ctIdx + 3] = res?.lastVisit || '';
    
    // Guests  
    const gue = gueAgg.get(phone);
    out[ctIdx + 4] = gue?.visits || 0;
    out[ctIdx + 5] = gue?.total || 0;
    out[ctIdx + 6] = gue?.firstVisit || '';
    out[ctIdx + 7] = gue?.lastVisit || '';
    
    return out;
  });
  
  return { headerOrderedRaw, rows };
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ
 */
function humanizeHeader(header) {
  const humanMap = {
    '–°–¥–µ–ª–∫–∞.ID': 'ID',
    '–°–¥–µ–ª–∫–∞.–ù–∞–∑–≤–∞–Ω–∏–µ': '–ù–∞–∑–≤–∞–Ω–∏–µ',
    '–°–¥–µ–ª–∫–∞.–°—Ç–∞—Ç—É—Å': '–°—Ç–∞—Ç—É—Å', 
    '–°–¥–µ–ª–∫–∞.–ë—é–¥–∂–µ—Ç': '–ë—é–¥–∂–µ—Ç',
    '–°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è': '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
    '–ö–æ–Ω—Ç–∞–∫—Ç.–¢–µ–ª–µ—Ñ–æ–Ω': '–¢–µ–ª–µ—Ñ–æ–Ω',
    '–ö–æ–Ω—Ç–∞–∫—Ç.–§–ò–û': '–ö–æ–Ω—Ç–∞–∫—Ç',
    '–°–¥–µ–ª–∫–∞.utm_source': 'UTM Source',
    '–°–¥–µ–ª–∫–∞.utm_medium': 'UTM Medium',
    '–°–¥–µ–ª–∫–∞.utm_campaign': 'UTM Campaign',
    'R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏': '–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ',
    'Reserves.–í–∏–∑–∏—Ç—ã': 'Res.–í–∏–∑–∏—Ç—ã',
    'Reserves.–°—É–º–º–∞': 'Res.–°—É–º–º–∞',
    'Guests.–í–∏–∑–∏—Ç—ã': 'Gue.–í–∏–∑–∏—Ç—ã',
    'Guests.–û–±—â–∞—è —Å—É–º–º–∞': 'Gue.–°—É–º–º–∞'
  };
  
  return humanMap[header] || header.replace(/^(–°–¥–µ–ª–∫–∞|–ö–æ–Ω—Ç–∞–∫—Ç)\./, '');
}

/**
 * –†–µ–Ω–¥–µ—Ä –≤ —Ä–∞–±–æ—á–∏–π –ª–∏—Å—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç–∏–ª–µ–π
 */
function renderToWorkingSheet(ss, CFG, displayHeader, rows) {
  const sh = ss.getSheetByName(CFG.SHEETS.OUT) || ss.insertSheet(CFG.SHEETS.OUT);
  
  if (CFG.PRESERVE_STYLES) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    const maxR = sh.getMaxRows();
    const maxC = sh.getMaxColumns();
    if (maxR > 1 && maxC > 0) {
      sh.getRange(2, 1, maxR - 1, maxC).clearContent();
    }
  } else {
    sh.clear();
  }

  // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
  ensureSize(sh, 2 + rows.length, displayHeader.length);

  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ (–ø–µ—Ä–≤–∞—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ)
  sh.getRange(2, 1, 1, displayHeader.length).setValues([displayHeader]);
  
  // –î–∞–Ω–Ω—ã–µ
  if (rows.length > 0) {
    sh.getRange(3, 1, rows.length, displayHeader.length).setValues(rows);
  }

  // –ë–∞–∑–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
  setFontAll(sh);
  
  // –ó–∞–º–æ—Ä–æ–∑–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  sh.setFrozenRows(2);
  
  // –§–∏–ª—å—Ç—Ä
  try {
    const existingFilter = sh.getFilter();
    if (existingFilter) existingFilter.remove();
    sh.getRange(2, 1, 1, displayHeader.length).createFilter();
  } catch (e) {
    Logger.log('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞: ' + e.toString());
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤ –¥–∞–Ω–Ω—ã—Ö
 */
function makeSubsets(ss, displayHeader, rows, CFG) {
  const statusIdx = displayHeader.indexOf('–°—Ç–∞—Ç—É—Å');
  const createdIdx = displayHeader.indexOf('–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è');
  
  if (statusIdx === -1) return;
  
  const today = new Date();
  const threeDaysAgo = new Date(today.getTime() - 3 * 24 * 60 * 60 * 1000);
  
  // –ù–û–í–´–ï: –Ω–µ–¥–∞–≤–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ, –Ω–µ –∑–∞–∫—Ä—ã—Ç—ã–µ
  const newRows = rows.filter(row => {
    const status = String(row[statusIdx] || '');
    const created = toDate(row[createdIdx]);
    
    const isNotClosed = !CFG.CLOSED_RE.test(status);
    const isRecent = created && created >= threeDaysAgo;
    
    return isNotClosed && isRecent;
  });
  
  // –ü–†–û–ë–õ–ï–ú–ù–´–ï: —Å—Ç–∞—Ä—ã–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ
  const problemRows = rows.filter(row => {
    const status = String(row[statusIdx] || '');
    const created = toDate(row[createdIdx]);
    
    const isNotClosed = !CFG.CLOSED_RE.test(status);
    const isOld = created && created < threeDaysAgo;
    
    return isNotClosed && isOld;
  });
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–∏—Å—Ç—ã
  writeSubset(ss, CFG.SHEETS.NEW_ONLY, displayHeader, newRows);
  writeSubset(ss, CFG.SHEETS.PROBLEM, displayHeader, problemRows);
}

/**
 * –ó–∞–ø–∏—Å—å –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ –≤ –ª–∏—Å—Ç
 */
function writeSubset(ss, sheetName, header, rows) {
  let sh = ss.getSheetByName(sheetName);
  if (!sh) sh = ss.insertSheet(sheetName);
  else sh.clear();
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
  sh.getRange(1, 1, 1, header.length).setValues([header]).setFontWeight('bold');
  
  // –î–∞–Ω–Ω—ã–µ
  if (rows.length > 0) {
    sh.getRange(2, 1, rows.length, header.length).setValues(rows);
  }
  
  // –ó–∞–º–æ—Ä–æ–∑–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä
  sh.setFrozenRows(1);
  try {
    sh.getRange(1, 1, 1, header.length).createFilter();
  } catch (e) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞
  }
  
  setFontAll(sh);
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–æ–ª–æ–Ω–∫–µ TIME
 */
function updateTimeOnlyOnWorking() {
  const CFG = getModuleConfig('mainScript');
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sh = ss.getSheetByName(CFG.SHEETS.OUT);
  if (!sh) throw new Error(`–ù–µ—Ç –ª–∏—Å—Ç–∞ "${CFG.SHEETS.OUT}"`);

  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤–æ 2-–π —Å—Ç—Ä–æ–∫–µ
  const header = sh.getRange(2, 1, 1, sh.getLastColumn()).getValues()[0].map(String);

  const colTIME = header.indexOf('TIME') + 1;
  const colArrival = header.indexOf('–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞') + 1;
  
  if (colTIME <= 0) throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ "TIME"');

  const lastRow = sh.getLastRow();
  const n = Math.max(0, lastRow - 2);
  if (n === 0) return;

  const timeVals = sh.getRange(3, colTIME, n, 1).getValues();
  const arrivalVals = colArrival > 0 ? sh.getRange(3, colArrival, n, 1).getValues() : null;

  const out = timeVals.map((row, i) => {
    let v = row[0];
    
    // –ï—Å–ª–∏ TIME –ø—É—Å—Ç–æ, –±–µ—Ä—ë–º –∏–∑ "–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞"
    if ((v === '' || v == null) && arrivalVals) {
      v = arrivalVals[i][0];
    }

    // –ï—Å–ª–∏ –¥–∞—Ç–∞/–≤—Ä–µ–º—è ‚Äî –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è
    if (v instanceof Date) {
      const t = new Date(v);
      const ms = t.getHours() * 3600000 + t.getMinutes() * 60000 + t.getSeconds() * 1000;
      return [ms / 86400000]; // –î–æ–ª—è —Å—É—Ç–æ–∫ –¥–ª—è Google Sheets
    }

    // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ‚Äî –ø–∞—Ä—Å–∏–º HH:MM
    const s = String(v || '').trim();
    if (s) {
      const m = s.match(/(\d{1,2}):(\d{2})(?::(\d{2}))?/);
      if (m) {
        const h = Math.min(23, Number(m[1]));
        const min = Math.min(59, Number(m[2]));
        const sec = m[3] ? Math.min(59, Number(m[3])) : 0;
        const ms = h * 3600000 + min * 60000 + sec * 1000;
        return [ms / 86400000];
      }
    }

    return [''];
  });

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∫ –≤—Ä–µ–º—è
  sh.getRange(3, colTIME, n, 1).setValues(out);
  sh.getRange(3, colTIME, n, 1).setNumberFormat('hh:mm');
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–ª-—Ç—Ä–µ–∫–∏–Ω–≥–∞
 */
function updateCalltrackingOnWorking() {
  const CFG = getModuleConfig('mainScript');
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sh = ss.getSheetByName(CFG.SHEETS.OUT);
  if (!sh) throw new Error(`–ù–µ—Ç –ª–∏—Å—Ç–∞ "${CFG.SHEETS.OUT}"`);

  const header = sh.getRange(2, 1, 1, sh.getLastColumn()).getValues()[0].map(String);

  const colMangoContact = header.indexOf('–ö–æ–Ω—Ç–∞–∫—Ç.–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE') + 1;
  const colMangoDeal = header.indexOf('–°–¥–µ–ª–∫–∞.–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE') + 1;
  let colOut = header.indexOf('R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏') + 1;

  if (colMangoContact <= 0 || colMangoDeal <= 0) {
    throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫–æ–ª–æ–Ω–∫–∏ Mango Office');
  }
  if (colOut <= 0) colOut = 22; // –†–µ–∑–µ—Ä–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è

  const lastRow = sh.getLastRow();
  const n = Math.max(0, lastRow - 2);
  if (n === 0) return;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—É –∫–æ–ª–ª-—Ç—Ä–µ–∫–∏–Ω–≥–∞
  const callTable = readTable(ss, CFG.SHEETS.CALL);
  const ctMap = buildCalltrackingMap(callTable);

  const mangoC = sh.getRange(3, colMangoContact, n, 1).getValues();
  const mangoD = sh.getRange(3, colMangoDeal, n, 1).getValues();

  const out = mangoC.map((row, i) => {
    const phoneC = cleanPhone(row[0]);
    const phoneD = cleanPhone(mangoD[i][0]);
    
    const tag = ctMap.get(phoneC) || ctMap.get(phoneD) || '';
    return [tag];
  });

  sh.getRange(3, colOut, n, 1).setValues(out);
}

// ========================================
// –†–ê–°–®–ò–†–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –û–ë–†–ê–ë–û–¢–ö–ò –î–ê–ù–ù–´–•
// –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ä–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
// ========================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö
 */
function initializeWorkingData_() {
  logInfo_('DATA_INIT', '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö');
  
  return {
    phoneMap: new Map(),
    utmMap: new Map(),
    calltrackingData: new Map(),
    processedDeals: new Set(),
    statusMapping: {
      '–ü–µ—Ä–≤–∏—á–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç': 'new',
      '–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã': 'in_progress', 
      '–ü—Ä–∏–Ω–∏–º–∞—é—Ç —Ä–µ—à–µ–Ω–∏–µ': 'considering',
      '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞': 'contract',
      '–£—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ': 'success',
      '–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ': 'failed'
    },
    errors: [],
    warnings: [],
    stats: {
      total: 0,
      processed: 0,
      enriched: 0,
      failed: 0
    }
  };
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
 */
function loadAndEnrichAllData_(workingData) {
  logInfo_('DATA_ENRICH', '–ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const mainData = loadMainDataSources_();
    
    // 2. –°—Ç—Ä–æ–∏–º –∫–∞—Ä—Ç—ã —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
    buildPhoneMaps_(workingData, mainData);
    
    // 3. –û–±–æ–≥–∞—â–∞–µ–º UTM –¥–∞–Ω–Ω—ã–º–∏
    enrichWithUTMData_(workingData, mainData);
    
    // 4. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞
    integrateCalltrackingData_(workingData, mainData);
    
    // 5. –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç–∞—Ç—É—Å—ã –∏ —Å—Ç–∞–¥–∏–∏
    normalizeStatusesAndStages_(workingData, mainData);
    
    logInfo_('DATA_ENRICH', '–û–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    return mainData;
    
  } catch (error) {
    logError_('DATA_ENRICH', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', error);
    throw error;
  }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö
 */
function loadMainDataSources_() {
  const sources = {
    amocrm: [],
    reserves: [],
    guests: [],
    siteforms: [],
    calltracking: []
  };
  
  try {
    // AmoCRM –¥–∞–Ω–Ω—ã–µ
    logInfo_('DATA_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö AmoCRM');
    sources.amocrm = loadAmoCrmData_();
    
    // –î–∞–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–æ–≤ 
    logInfo_('DATA_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö Reserves RP');
    sources.reserves = loadReservesData_();
    
    // –î–∞–Ω–Ω—ã–µ –≥–æ—Å—Ç–µ–π
    logInfo_('DATA_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö Guests RP');
    sources.guests = loadGuestsData_();
    
    // –ó–∞—è–≤–∫–∏ —Å —Å–∞–π—Ç–∞
    logInfo_('DATA_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞');
    sources.siteforms = loadSiteFormsData_();
    
    // –ö–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥ –¥–∞–Ω–Ω—ã–µ
    logInfo_('DATA_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞');
    sources.calltracking = loadCalltrackingData_();
    
    // UTM –¥–∞–Ω–Ω—ã–µ
    logInfo_('DATA_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ UTM –¥–∞–Ω–Ω—ã—Ö');
    sources.utm = loadUTMData_();
    
    return sources;
    
  } catch (error) {
    logError_('DATA_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö', error);
    throw error;
  }
}

/**
 * –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞—Ä—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –ª–æ–≥–∏–∫–µ –∏–∑ buildWorkingFromFive
 */
function buildPhoneMaps_(workingData, mainData) {
  logInfo_('PHONE_MAP', '–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞—Ä—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤');
  
  try {
    // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏–∑ AmoCRM
    mainData.amocrm.forEach(deal => {
      if (deal.phone) {
        const normalizedPhone = normalizePhone_(deal.phone);
        if (normalizedPhone) {
          workingData.phoneMap.set(normalizedPhone, deal);
        }
      }
    });
    
    // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏–∑ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞
    mainData.calltracking.forEach(call => {
      if (call.mango_line) {
        const normalizedPhone = normalizePhone_(call.mango_line);
        if (normalizedPhone) {
          workingData.calltrackingData.set(normalizedPhone, call);
        }
      }
    });
    
    // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏–∑ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞
    mainData.siteforms.forEach(form => {
      if (form.phone) {
        const normalizedPhone = normalizePhone_(form.phone);
        if (normalizedPhone) {
          workingData.siteData.set(normalizedPhone, form);
        }
      }
    });
    
    // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏–∑ —Ä–µ–∑–µ—Ä–≤–æ–≤
    mainData.reserves.forEach(reserve => {
      if (reserve.phone) {
        const normalizedPhone = normalizePhone_(reserve.phone);
        if (normalizedPhone) {
          workingData.reserveData.set(normalizedPhone, reserve);
        }
      }
    });
    
    // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏–∑ –≥–æ—Å—Ç–µ–π
    mainData.guests.forEach(guest => {
      if (guest.phone) {
        const normalizedPhone = normalizePhone_(guest.phone);
        if (normalizedPhone) {
          workingData.guestData.set(normalizedPhone, guest);
        }
      }
    });
    
    logInfo_('PHONE_MAP', `–°–æ–∑–¥–∞–Ω–æ –∫–∞—Ä—Ç: AMO=${workingData.phoneMap.size}, –ö–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥=${workingData.calltrackingData.size}, –°–∞–π—Ç=${workingData.siteData.size}, –†–µ–∑–µ—Ä–≤—ã=${workingData.reserveData.size}, –ì–æ—Å—Ç–∏=${workingData.guestData.size}`);
    
  } catch (error) {
    logError_('PHONE_MAP', '–û—à–∏–±–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–∞—Ä—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤', error);
    workingData.errors.push(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤: ${error.message}`);
  }
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
 * –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è –ª–æ–≥–∏–∫–∏ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
 */
function normalizePhone_(phone) {
  if (!phone) return null;
  
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
  let clean = phone.toString().replace(/\D/g, '');
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞
  if (clean.length === 11 && clean.startsWith('7')) {
    return clean;
  } else if (clean.length === 11 && clean.startsWith('8')) {
    return '7' + clean.substring(1);
  } else if (clean.length === 10) {
    return '7' + clean;
  }
  
  return clean.length >= 10 ? clean : null;
}

/**
 * –û–±–æ–≥–∞—â–µ–Ω–∏–µ UTM –¥–∞–Ω–Ω—ã–º–∏
 */
function enrichWithUTMData_(workingData, mainData) {
  logInfo_('UTM_ENRICH', '–û–±–æ–≥–∞—â–µ–Ω–∏–µ UTM –¥–∞–Ω–Ω—ã–º–∏');
  
  try {
    mainData.utm.forEach(utmRecord => {
      const key = generateUTMKey_(utmRecord);
      workingData.utmMap.set(key, utmRecord);
    });
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º UTM –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    mainData.amocrm.forEach(deal => {
      const utmKey = generateDealUTMKey_(deal);
      const utmData = workingData.utmMap.get(utmKey);
      
      if (utmData) {
        deal.enriched = deal.enriched || {};
        deal.enriched.utm = utmData;
        workingData.stats.enriched++;
      }
    });
    
    logInfo_('UTM_ENRICH', `–û–±–æ–≥–∞—â–µ–Ω–æ ${workingData.stats.enriched} –∑–∞–ø–∏—Å–µ–π UTM –¥–∞–Ω–Ω—ã–º–∏`);
    
  } catch (error) {
    logError_('UTM_ENRICH', '–û—à–∏–±–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–∏—è UTM –¥–∞–Ω–Ω—ã–º–∏', error);
    workingData.errors.push(`–û—à–∏–±–∫–∞ UTM –æ–±–æ–≥–∞—â–µ–Ω–∏—è: ${error.message}`);
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ UTM –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
 */
function generateUTMKey_(utmRecord) {
  return `${utmRecord.source || ''}_${utmRecord.medium || ''}_${utmRecord.campaign || ''}`;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è UTM –∫–ª—é—á–∞ –¥–ª—è —Å–¥–µ–ª–∫–∏
 */
function generateDealUTMKey_(deal) {
  return `${deal.utm_source || ''}_${deal.utm_medium || ''}_${deal.utm_campaign || ''}`;
}

/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞
 */
function integrateCalltrackingData_(workingData, mainData) {
  logInfo_('CALLTRACK_INTEGRATE', '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞');
  
  try {
    mainData.amocrm.forEach(deal => {
      const normalizedPhone = normalizePhone_(deal.phone);
      const callData = workingData.calltrackingData.get(normalizedPhone);
      
      if (callData) {
        deal.enriched = deal.enriched || {};
        deal.enriched.calltracking = {
          source: callData.source,
          keyword: callData.keyword,
          city: callData.city,
          duration: callData.duration,
          status: callData.status
        };
        workingData.stats.enriched++;
      }
    });
    
    logInfo_('CALLTRACK_INTEGRATE', '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    
  } catch (error) {
    logError_('CALLTRACK_INTEGRATE', '–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞', error);
    workingData.errors.push(`–û—à–∏–±–∫–∞ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞: ${error.message}`);
  }
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ —Å—Ç–∞–¥–∏–π
 */
function normalizeStatusesAndStages_(workingData, mainData) {
  logInfo_('STATUS_NORMALIZE', '–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ —Å—Ç–∞–¥–∏–π');
  
  try {
    mainData.amocrm.forEach(deal => {
      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç–∞—Ç—É—Å
      const originalStatus = deal.status;
      const normalizedStatus = workingData.statusMapping[originalStatus] || 'unknown';
      
      deal.normalized_status = normalizedStatus;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å—Ç–∞–¥–∏–∏
      deal.stage_category = determineStageCategory_(deal.stage);
      
      workingData.stats.processed++;
    });
    
    logInfo_('STATUS_NORMALIZE', `–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ ${workingData.stats.processed} –∑–∞–ø–∏—Å–µ–π`);
    
  } catch (error) {
    logError_('STATUS_NORMALIZE', '–û—à–∏–±–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤', error);
    workingData.errors.push(`–û—à–∏–±–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: ${error.message}`);
  }
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—Ç–∞–¥–∏–∏
 */
function determineStageCategory_(stage) {
  if (!stage) return 'unknown';
  
  const stageStr = stage.toLowerCase();
  
  if (stageStr.includes('–Ω–æ–≤–∞—è') || stageStr.includes('–ø–µ—Ä–≤–∏—á–Ω')) {
    return 'new';
  } else if (stageStr.includes('—Ä–∞–±–æ—Ç–∞') || stageStr.includes('–ø–µ—Ä–µ–≥–æ–≤–æ—Ä')) {
    return 'in_progress';
  } else if (stageStr.includes('—Ä–µ—à–µ–Ω–∏–µ') || stageStr.includes('—Ä–∞–∑–¥—É–º')) {
    return 'considering';
  } else if (stageStr.includes('–¥–æ–≥–æ–≤–æ—Ä') || stageStr.includes('—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω')) {
    return 'contract';
  } else if (stageStr.includes('—É—Å–ø–µ—à–Ω–æ') || stageStr.includes('—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω')) {
    return 'success';
  } else if (stageStr.includes('–∑–∞–∫—Ä—ã—Ç') || stageStr.includes('–æ—Ç–∫–∞–∑')) {
    return 'failed';
  }
  
  return 'other';
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –ª–æ–≥–∏–∫–µ
 */
function processAdvancedDataLogic_(enrichedData) {
  logInfo_('ADVANCED_PROCESS', '–ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    // 1. –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    const cleanData = deduplicateAndCleanData_(enrichedData);
    
    // 2. –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤—ã—Ö –∫–∞—Å–∞–Ω–∏–π
    const firstTouchResults = analyzeFirstTouchAttribution_(cleanData);
    
    // 3. –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–≤–µ—Ä—Å–∏–π –ø–æ –≤–æ—Ä–æ–Ω–∫–µ
    const funnelAnalysis = analyzeFunnelConversions_(cleanData);
    
    // 4. –†–∞—Å—á—ë—Ç LTV –∏ ROI
    const ltvRoiAnalysis = calculateLTVandROI_(cleanData);
    
    // 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    saveAdvancedAnalysisResults_({
      firstTouch: firstTouchResults,
      funnel: funnelAnalysis,
      ltvRoi: ltvRoiAnalysis
    });
    
    logInfo_('ADVANCED_PROCESS', '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    
  } catch (error) {
    logError_('ADVANCED_PROCESS', '–û—à–∏–±–∫–∞ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏', error);
    throw error;
  }
}

/**
 * –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
 */
function deduplicateAndCleanData_(data) {
  logInfo_('DATA_CLEAN', '–î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö');
  
  const seen = new Set();
  const cleanData = {
    amocrm: [],
    calltracking: [],
    analytics: [],
    utm: []
  };
  
  // –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è AmoCRM –¥–∞–Ω–Ω—ã—Ö
  data.amocrm.forEach(deal => {
    const key = `${deal.id}_${deal.phone}_${deal.email}`;
    if (!seen.has(key)) {
      seen.add(key);
      cleanData.amocrm.push(deal);
    }
  });
  
  // –û—á–∏—Å—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ
  cleanData.calltracking = data.calltracking;
  cleanData.analytics = data.analytics;
  cleanData.utm = data.utm;
  
  logInfo_('DATA_CLEAN', `–û—á–∏—â–µ–Ω–æ: ${cleanData.amocrm.length} –∑–∞–ø–∏—Å–µ–π AmoCRM`);
  return cleanData;
}

/**
 * –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤—ã—Ö –∫–∞—Å–∞–Ω–∏–π
 */
function analyzeFirstTouchAttribution_(data) {
  logInfo_('FIRST_TOUCH', '–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤—ã—Ö –∫–∞—Å–∞–Ω–∏–π');
  
  const firstTouchMap = new Map();
  
  data.amocrm.forEach(deal => {
    const clientKey = normalizePhone_(deal.phone) || deal.email || deal.id;
    
    if (!firstTouchMap.has(clientKey)) {
      firstTouchMap.set(clientKey, {
        deal: deal,
        firstTouchDate: deal.created_at,
        source: deal.utm_source || deal.enriched?.calltracking?.source || 'direct'
      });
    } else {
      // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞—Ç—ã –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ —Ä–∞–Ω–Ω–µ–µ –∫–∞—Å–∞–Ω–∏–µ
      const existing = firstTouchMap.get(clientKey);
      if (deal.created_at < existing.firstTouchDate) {
        firstTouchMap.set(clientKey, {
          deal: deal,
          firstTouchDate: deal.created_at,
          source: deal.utm_source || deal.enriched?.calltracking?.source || 'direct'
        });
      }
    }
  });
  
  return Array.from(firstTouchMap.values());
}

/**
 * –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–≤–µ—Ä—Å–∏–π –ø–æ –≤–æ—Ä–æ–Ω–∫–µ
 */
function analyzeFunnelConversions_(data) {
  logInfo_('FUNNEL_ANALYSIS', '–ê–Ω–∞–ª–∏–∑ –≤–æ—Ä–æ–Ω–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–π');
  
  const funnel = {
    total: 0,
    new: 0,
    in_progress: 0,
    considering: 0,
    contract: 0,
    success: 0,
    failed: 0
  };
  
  data.amocrm.forEach(deal => {
    funnel.total++;
    funnel[deal.stage_category] = (funnel[deal.stage_category] || 0) + 1;
  });
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
  const conversions = {
    new_to_progress: funnel.in_progress / funnel.new * 100,
    progress_to_considering: funnel.considering / funnel.in_progress * 100,
    considering_to_contract: funnel.contract / funnel.considering * 100,
    contract_to_success: funnel.success / funnel.contract * 100,
    overall_conversion: funnel.success / funnel.total * 100
  };
  
  return { funnel, conversions };
}

/**
 * –†–∞—Å—á—ë—Ç LTV –∏ ROI
 */
function calculateLTVandROI_(data) {
  logInfo_('LTV_ROI', '–†–∞—Å—á—ë—Ç LTV –∏ ROI');
  
  const results = {
    total_revenue: 0,
    total_deals: 0,
    average_deal_value: 0,
    ltv: 0,
    roi: 0
  };
  
  const successfulDeals = data.amocrm.filter(deal => deal.stage_category === 'success');
  
  results.total_deals = successfulDeals.length;
  results.total_revenue = successfulDeals.reduce((sum, deal) => sum + (deal.price || 0), 0);
  results.average_deal_value = results.total_revenue / results.total_deals || 0;
  
  // –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á—ë—Ç LTV (—Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏ * 1.5)
  results.ltv = results.average_deal_value * 1.5;
  
  // ROI —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç
  const totalCosts = calculateTotalMarketingCosts_(data);
  results.roi = totalCosts > 0 ? (results.total_revenue / totalCosts * 100 - 100) : 0;
  
  return results;
}

/**
 * –†–∞—Å—á—ë—Ç –æ–±—â–∏—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∑–∞—Ç—Ä–∞—Ç
 */
function calculateTotalMarketingCosts_(data) {
  // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ –∑–∞—Ç—Ä–∞—Ç –∏–∑ –≤–∞—à–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
  return 100000; // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
 */
function saveAdvancedAnalysisResults_(results) {
  logInfo_('SAVE_RESULTS', '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç
    let sheet = ss.getSheetByName('–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞');
    if (!sheet) {
      sheet = ss.insertSheet('–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ê–Ω–∞–ª–∏—Ç–∏–∫–∞');
    }
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    sheet.clear();
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    sheet.getRange(1, 1, 1, 4).setValues([['–ú–µ—Ç—Ä–∏–∫–∞', '–ó–Ω–∞—á–µ–Ω–∏–µ', '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π']]);
    
    // –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤—ã—Ö –∫–∞—Å–∞–Ω–∏–π
    const firstTouchData = results.firstTouch.map((item, index) => [
      `–ü–µ—Ä–≤–æ–µ –∫–∞—Å–∞–Ω–∏–µ ${index + 1}`,
      item.source,
      item.firstTouchDate,
      '–ò—Å—Ç–æ—á–Ω–∏–∫ –ø–µ—Ä–≤–æ–≥–æ –∫–∞—Å–∞–Ω–∏—è'
    ]);
    
    // –î–∞–Ω–Ω—ã–µ –≤–æ—Ä–æ–Ω–∫–∏
    const funnelData = Object.entries(results.funnel.conversions).map(([key, value]) => [
      `–ö–æ–Ω–≤–µ—Ä—Å–∏—è ${key}`,
      `${value.toFixed(2)}%`,
      new Date(),
      '–ö–æ–Ω–≤–µ—Ä—Å–∏—è –ø–æ —ç—Ç–∞–ø–∞–º –≤–æ—Ä–æ–Ω–∫–∏'
    ]);
    
    // –î–∞–Ω–Ω—ã–µ LTV/ROI
    const ltvRoiData = Object.entries(results.ltvRoi).map(([key, value]) => [
      key.toUpperCase(),
      typeof value === 'number' ? value.toFixed(2) : value,
      new Date(),
      '–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏'
    ]);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    const allData = [...firstTouchData, ...funnelData, ...ltvRoiData];
    if (allData.length > 0) {
      sheet.getRange(2, 1, allData.length, 4).setValues(allData);
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    sheet.getRange(1, 1, 1, 4).setBackground('#4285f4').setFontColor('white').setFontWeight('bold');
    
    logInfo_('SAVE_RESULTS', '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    
  } catch (error) {
    logError_('SAVE_RESULTS', '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤', error);
    throw error;
  }
}

/**
 * –†–µ–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ª–∏—Å—Ç–æ–≤
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö
 */

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ AmoCRM
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ "–ê–º–æ –í—ã–≥—Ä—É–∑–∫–∞" –∏ "–í—ã–≥—Ä—É–∑–∫–∞ –ê–º–æ –ü–æ–ª–Ω–∞—è"
 */
function loadAmoCrmData_() {
  logInfo_('AMOCRM_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö AmoCRM');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ AmoCRM (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç "–í—ã–≥—Ä—É–∑–∫–∞ –ê–º–æ –ü–æ–ª–Ω–∞—è")
    let sheet = ss.getSheetByName('–í—ã–≥—Ä—É–∑–∫–∞ –ê–º–æ –ü–æ–ª–Ω–∞—è') || 
               ss.getSheetByName('–ê–º–æ –í—ã–≥—Ä—É–∑–∫–∞');
    
    if (!sheet) {
      logWarning_('AMOCRM_LOAD', '–õ–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ AmoCRM –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return [];
    }
    
    const data = sheet.getDataRange().getValues();
    if (data.length < 2) {
      logWarning_('AMOCRM_LOAD', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç–µ AmoCRM');
      return [];
    }
    
    const rows = data.slice(1); // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ "–í—ã–≥—Ä—É–∑–∫–∞ –ê–º–æ –ü–æ–ª–Ω–∞—è"
    const amoCrmData = rows.map(row => ({
      // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      id: row[0],                           // A ‚Äî –°–¥–µ–ª–∫–∞.ID
      name: row[1],                         // B ‚Äî –°–¥–µ–ª–∫–∞.–ù–∞–∑–≤–∞–Ω–∏–µ
      responsible: row[2],                  // C ‚Äî –°–¥–µ–ª–∫–∞.–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π
      contact_name: row[3],                 // D ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç.–§–ò–û
      status: row[4],                       // E ‚Äî –°–¥–µ–ª–∫–∞.–°—Ç–∞—Ç—É—Å
      budget: row[5],                       // F ‚Äî –°–¥–µ–ª–∫–∞.–ë—é–¥–∂–µ—Ç
      created_at: row[6],                   // G ‚Äî –°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
      responsible2: row[7],                 // H ‚Äî –°–¥–µ–ª–∫–∞.–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π (–¥—É–±–ª—å)
      tags: row[8],                         // I ‚Äî –°–¥–µ–ª–∫–∞.–¢–µ–≥–∏
      closed_at: row[9],                    // J ‚Äî –°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
      
      // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
      ym_client_id: row[10],                // K ‚Äî –°–¥–µ–ª–∫–∞.YM_CLIENT_ID
      ga_client_id: row[11],                // L ‚Äî –°–¥–µ–ª–∫–∞.GA_CLIENT_ID
      button_text: row[12],                 // M ‚Äî –°–¥–µ–ª–∫–∞.BUTTON_TEXT
      date: row[13],                        // N ‚Äî –°–¥–µ–ª–∫–∞.DATE
      time: row[14],                        // O ‚Äî –°–¥–µ–ª–∫–∞.TIME
      deal_source: row[15],                 // P ‚Äî –°–¥–µ–ª–∫–∞.R.–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–¥–µ–ª–∫–∏
      city_tag: row[16],                    // Q ‚Äî –°–¥–µ–ª–∫–∞.R.–¢–µ–≥ –≥–æ—Ä–æ–¥–∞
      software: row[17],                    // R ‚Äî –°–¥–µ–ª–∫–∞.–ü–û
      
      // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
      bar_name: row[18],                    // S ‚Äî –°–¥–µ–ª–∫–∞.–ë–∞—Ä (deal)
      booking_date: row[19],                // T ‚Äî –°–¥–µ–ª–∫–∞.–î–∞—Ç–∞ –±—Ä–æ–Ω–∏
      guest_count: row[20],                 // U ‚Äî –°–¥–µ–ª–∫–∞.–ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π
      visit_time: row[21],                  // V ‚Äî –°–¥–µ–ª–∫–∞.–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞
      comment: row[22],                     // W ‚Äî –°–¥–µ–ª–∫–∞.–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ú–û–ë
      source: row[23],                      // X ‚Äî –°–¥–µ–ª–∫–∞.–ò—Å—Ç–æ—á–Ω–∏–∫
      lead_type: row[24],                   // Y ‚Äî –°–¥–µ–ª–∫–∞.–¢–∏–ø –ª–∏–¥–∞
      refusal_reason: row[25],              // Z ‚Äî –°–¥–µ–ª–∫–∞.–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞ (–û–ë)
      guest_status: row[26],                // AA ‚Äî –°–¥–µ–ª–∫–∞.R.–°—Ç–∞—Ç—É—Å—ã –≥–æ—Å—Ç–µ–π
      referral_type: row[27],               // AB ‚Äî –°–¥–µ–ª–∫–∞.–°–∞—Ä–∞—Ñ–∞–Ω –≥–æ—Å—Ç–∏
      
      // UTM –¥–∞–Ω–Ω—ã–µ
      utm_medium: row[28],                  // AC ‚Äî –°–¥–µ–ª–∫–∞.UTM_MEDIUM
      formname: row[29],                    // AD ‚Äî –°–¥–µ–ª–∫–∞.FORMNAME
      referer: row[30],                     // AE ‚Äî –°–¥–µ–ª–∫–∞.REFERER
      formid: row[31],                      // AF ‚Äî –°–¥–µ–ª–∫–∞.FORMID
      mango_line1: row[32],                 // AG ‚Äî –°–¥–µ–ª–∫–∞.–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE
      utm_source: row[33],                  // AH ‚Äî –°–¥–µ–ª–∫–∞.UTM_SOURCE
      utm_term: row[34],                    // AI ‚Äî –°–¥–µ–ª–∫–∞.UTM_TERM
      utm_campaign: row[35],                // AJ ‚Äî –°–¥–µ–ª–∫–∞.UTM_CAMPAIGN
      utm_content: row[36],                 // AK ‚Äî –°–¥–µ–ª–∫–∞.UTM_CONTENT
      utm_referrer: row[37],                // AL ‚Äî –°–¥–µ–ª–∫–∞.utm_referrer
      _ym_uid: row[38],                     // AM ‚Äî –°–¥–µ–ª–∫–∞._ym_uid
      
      // –ö–æ–Ω—Ç–∞–∫—Ç—ã
      phone: row[39],                       // AN ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç.–¢–µ–ª–µ—Ñ–æ–Ω
      mango_line2: row[40],                 // AO ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç.–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE
      notes: row[41]                        // AP ‚Äî –°–¥–µ–ª–∫–∞.–ü—Ä–∏–º–µ—á–∞–Ω–∏—è(—á–µ—Ä–µ–∑ ;)
    }));
    
    logInfo_('AMOCRM_LOAD', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${amoCrmData.length} —Å–¥–µ–ª–æ–∫ AmoCRM`);
    return amoCrmData;
    
  } catch (error) {
    logError_('AMOCRM_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö AmoCRM', error);
    return [];
  }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ "Reserves RP" 
 */
function loadReservesData_() {
  logInfo_('RESERVES_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Reserves RP');
    return [];
  }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ "–ö–æ–ª–ª–¢—Ä–µ–∫–∏–Ω–≥"
 */
function loadCalltrackingData_() {
  logInfo_('CALLTRACK_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    let sheet = ss.getSheetByName('–ö–æ–ª–ª–¢—Ä–µ–∫–∏–Ω–≥') || 
               ss.getSheetByName('Calltracking') ||
               ss.getSheetByName('–ö–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥');
    
    if (!sheet) {
      logWarning_('CALLTRACK_LOAD', '–õ–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return [];
    }
    
    const data = sheet.getDataRange().getValues();
    if (data.length < 2) {
      logWarning_('CALLTRACK_LOAD', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç–µ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞');
      return [];
    }
    
    const headers = data[0];
    const rows = data.slice(1);
    
    const calltrackingData = rows.map(row => {
      const call = {};
      headers.forEach((header, index) => {
        const value = row[index];
        
        switch(header) {
          case '–ö–æ–Ω—Ç–∞–∫—Ç.–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE':
          case '–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE':
            call.phone = value;
            break;
          case 'R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏':
            call.source = value;
            break;
          case '–ù–∞–∑–≤–∞–Ω–∏–µ –ö–∞–Ω–∞–ª–∞':
            call.channel = value;
            break;
          default:
            call[header] = value;
        }
      });
      
      return call;
    });
    
    logInfo_('CALLTRACK_LOAD', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${calltrackingData.length} –∑–∞–ø–∏—Å–µ–π –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞`);
    return calltrackingData;
    
  } catch (error) {
    logError_('CALLTRACK_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞', error);
    return [];
  }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-—Ñ–æ—Ä–º –∏ —Ä–µ–∑–µ—Ä–≤–æ–≤
 */
/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ "Reserves RP" 
 */
function loadReservesData_() {
  logInfo_('RESERVES_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Reserves RP');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName('Reserves RP');
    
    if (!sheet) {
      logWarning_('RESERVES_LOAD', '–õ–∏—Å—Ç "Reserves RP" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return [];
    }
    
    const data = sheet.getDataRange().getValues();
    if (data.length < 2) return [];
    
    const rows = data.slice(1);
    
    const reservesData = rows.map(row => ({
      id: row[0],              // A ‚Äî ID
      request_num: row[1],     // B ‚Äî ‚Ññ –∑–∞—è–≤–∫–∏
      name: row[2],            // C ‚Äî –ò–º—è
      phone: row[3],           // D ‚Äî –¢–µ–ª–µ—Ñ–æ–Ω
      email: row[4],           // E ‚Äî Email
      datetime: row[5],        // F ‚Äî –î–∞—Ç–∞/–≤—Ä–µ–º—è
      status: row[6],          // G ‚Äî –°—Ç–∞—Ç—É—Å
      comment: row[7],         // H ‚Äî –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
      amount: row[8],          // I ‚Äî –°—á—ë—Ç, ‚ÇΩ
      guests: row[9],          // J ‚Äî –ì–æ—Å—Ç–µ–π
      source: row[10]          // K ‚Äî –ò—Å—Ç–æ—á–Ω–∏–∫
    }));
    
    logInfo_('RESERVES_LOAD', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${reservesData.length} –∑–∞–ø–∏—Å–µ–π Reserves`);
    return reservesData;
    
  } catch (error) {
    logError_('RESERVES_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Reserves', error);
    return [];
  }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ "Guests RP"
 */
function loadGuestsData_() {
  logInfo_('GUESTS_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Guests RP');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName('Guests RP');
    
    if (!sheet) {
      logWarning_('GUESTS_LOAD', '–õ–∏—Å—Ç "Guests RP" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return [];
    }
    
    const data = sheet.getDataRange().getValues();
    if (data.length < 2) return [];
    
    const rows = data.slice(1);
    
    const guestsData = rows.map(row => ({
      name: row[0],            // A ‚Äî –ò–º—è
      phone: row[1],           // B ‚Äî –¢–µ–ª–µ—Ñ–æ–Ω
      email: row[2],           // C ‚Äî Email
      visits: row[3],          // D ‚Äî –ö–æ–ª-–≤–æ –≤–∏–∑–∏—Ç–æ–≤
      total_amount: row[4],    // E ‚Äî –û–±—â–∞—è —Å—É–º–º–∞
      first_visit: row[5],     // F ‚Äî –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç
      last_visit: row[6],      // G ‚Äî –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç
      bill_1: row[7],          // H ‚Äî –°—á—ë—Ç 1-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_2: row[8],          // I ‚Äî –°—á—ë—Ç 2-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_3: row[9],          // J ‚Äî –°—á—ë—Ç 3-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_4: row[10],         // K ‚Äî –°—á—ë—Ç 4-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_5: row[11],         // L ‚Äî –°—á—ë—Ç 5-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_6: row[12],         // M ‚Äî –°—á—ë—Ç 6-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_7: row[13],         // N ‚Äî –°—á—ë—Ç 7-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_8: row[14],         // O ‚Äî –°—á—ë—Ç 8-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_9: row[15],         // P ‚Äî –°—á—ë—Ç 9-–≥–æ –≤–∏–∑–∏—Ç–∞
      bill_10: row[16]         // Q ‚Äî –°—á—ë—Ç 10-–≥–æ –≤–∏–∑–∏—Ç–∞
    }));
    
    logInfo_('GUESTS_LOAD', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${guestsData.length} –∑–∞–ø–∏—Å–µ–π Guests`);
    return guestsData;
    
  } catch (error) {
    logError_('GUESTS_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Guests', error);
    return [];
  }
}
/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ "–ó–∞—è–≤–∫–∏ —Å –°–∞–π—Ç–∞"
 */
function loadSiteFormsData_() {
  logInfo_('SITE_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName('–ó–∞—è–≤–∫–∏ —Å –°–∞–π—Ç–∞');
    
    if (!sheet) {
      logWarning_('SITE_LOAD', '–õ–∏—Å—Ç "–ó–∞—è–≤–∫–∏ —Å –°–∞–π—Ç–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return [];
    }
    
    const data = sheet.getDataRange().getValues();
    if (data.length < 2) return [];
    
    const rows = data.slice(1);
    
    const siteData = rows.map(row => ({
      name: row[0],                 // A ‚Äî Name
      phone: row[1],                // B ‚Äî Phone
      referer: row[2],              // C ‚Äî referer
      formid: row[3],               // D ‚Äî formid
      sent: row[4],                 // E ‚Äî sent
      requestid: row[5],            // F ‚Äî requestid
      email: row[6],                // G ‚Äî Email
      date: row[7],                 // H ‚Äî Date
      quantity: row[8],             // I ‚Äî Quantity
      checkbox: row[9],             // J ‚Äî Checkbox
      formname: row[10],            // K ‚Äî Form name
      time: row[11],                // L ‚Äî Time
      utm_term: row[12],            // M ‚Äî utm_term
      utm_campaign: row[13],        // N ‚Äî utm_campaign
      utm_source: row[14],          // O ‚Äî utm_source
      utm_content: row[15],         // P ‚Äî utm_content
      utm_medium: row[16],          // Q ‚Äî utm_medium
      button: row[17],              // R ‚Äî –ö–Ω–æ–ø–∫–∞
      ym_client_id: row[18],        // S ‚Äî ym_client_id
      ga_client_id: row[19],        // T ‚Äî ga_client_id
      button_text: row[20],         // U ‚Äî button_text
      referrer: row[21],            // V ‚Äî referrer
      landing_page: row[22],        // W ‚Äî landing_page
      page_title: row[23],          // X ‚Äî page_title
      timestamp: row[24],           // Y ‚Äî timestamp
      device_type: row[25],         // Z ‚Äî device_type
      device_model: row[26],        // AA ‚Äî device_model
      os: row[27],                  // AB ‚Äî os
      browser: row[28],             // AC ‚Äî browser
      browser_version: row[29],     // AD ‚Äî browser_version
      screen_size: row[30],         // AE ‚Äî screen_size
      clicks_count: row[31],        // AF ‚Äî clicks_count
      user_city: row[32],           // AG ‚Äî user_city
      user_country: row[33],        // AH ‚Äî user_country
      user_ip: row[34],             // AI ‚Äî user_ip
      os_version: row[35],          // AJ ‚Äî os_version
      first_source: row[36],        // AK ‚Äî first_source
      first_referrer: row[37],      // AL ‚Äî first_referrer
      current_source: row[38],      // AM ‚Äî current_source
      current_page: row[39],        // AN ‚Äî current_page
      visits_count: row[40],        // AO ‚Äî visits_count
      first_visit_date: row[41],    // AP ‚Äî first_visit_date
      days_since_first_visit: row[42], // AQ ‚Äî days_since_first_visit
      submit_date: row[43],         // AR ‚Äî submit_date
      submit_time: row[44],         // AS ‚Äî submit_time
      day_of_week: row[45],         // AT ‚Äî day_of_week
      time_of_day: row[46],         // AU ‚Äî time_of_day
      timezone: row[47],            // AV ‚Äî timezone
      scroll_depth: row[48]         // AW ‚Äî scroll_depth
    }));
    
    logInfo_('SITE_LOAD', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${siteData.length} –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞`);
    return siteData;
    
  } catch (error) {
    logError_('SITE_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫ —Å —Å–∞–π—Ç–∞', error);
    return [];
  }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞
 */
function loadCalltrackingData_() {
  logInfo_('CALLTRACK_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName('–ö–æ–ª–ª–¢—Ä–µ–∫–∏–Ω–≥');
    
    if (!sheet) {
      logWarning_('CALLTRACK_LOAD', '–õ–∏—Å—Ç "–ö–æ–ª–ª–¢—Ä–µ–∫–∏–Ω–≥" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return [];
    }
    
    const data = sheet.getDataRange().getValues();
    if (data.length < 2) return [];
    
    const rows = data.slice(1);
    
    const callData = rows.map(row => ({
      mango_line: row[0],           // A ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç.–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE
      tel_source: row[1],           // B ‚Äî R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏
      channel_name: row[2]          // C ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ –ö–∞–Ω–∞–ª–∞
    }));
    
    logInfo_('CALLTRACK_LOAD', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${callData.length} –∑–∞–ø–∏—Å–µ–π –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞`);
    return callData;
    
  } catch (error) {
    logError_('CALLTRACK_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞', error);
    return [];
  }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç UTM –¥–∞–Ω–Ω—ã–µ (–∑–∞–≥–ª—É—à–∫–∞)
 */
    let reservesSheet = ss.getSheetByName('Reserves RP') || 
                       ss.getSheetByName('Reserves') ||
                       ss.getSheetByName('–†–µ–∑–µ—Ä–≤—ã');
    
    if (reservesSheet) {
      const reservesData = reservesSheet.getDataRange().getValues();
      if (reservesData.length > 1) {
        const reservesHeaders = reservesData[0];
        const reservesRows = reservesData.slice(1);
        
        analyticsData.reserves = reservesRows.map(row => {
          const reserve = {};
          reservesHeaders.forEach((header, index) => {
            reserve[header] = row[index];
          });
          return reserve;
        });
      }
    }
    
    // Guests RP
    let guestsSheet = ss.getSheetByName('Guests RP') || 
                     ss.getSheetByName('Guests') ||
                     ss.getSheetByName('–ì–æ—Å—Ç–∏');
    
    if (guestsSheet) {
      const guestsData = guestsSheet.getDataRange().getValues();
      if (guestsData.length > 1) {
        const guestsHeaders = guestsData[0];
        const guestsRows = guestsData.slice(1);
        
        analyticsData.guests = guestsRows.map(row => {
          const guest = {};
          guestsHeaders.forEach((header, index) => {
            guest[header] = row[index];
          });
          return guest;
        });
      }
    }
    
    logInfo_('ANALYTICS_LOAD', 
      `–ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${analyticsData.webForms.length} –≤–µ–±-—Ñ–æ—Ä–º, ` +
      `${analyticsData.reserves.length} —Ä–µ–∑–µ—Ä–≤–æ–≤, ` +
      `${analyticsData.guests.length} –≥–æ—Å—Ç–µ–π`
    );
    
    return analyticsData;
    
  } catch (error) {
    logError_('ANALYTICS_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö', error);
    return { webForms: [], reserves: [], guests: [] };
  }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ UTM –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
 */
function loadUTMData_() {
  logInfo_('UTM_LOAD', '–ó–∞–≥—Ä—É–∑–∫–∞ UTM –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const utmData = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º UTM –¥–∞–Ω–Ω—ã–µ –∏–∑ AmoCRM
    const amoCrmSheet = ss.getSheetByName('–ê–º–æ –í—ã–≥—Ä—É–∑–∫–∞') || 
                       ss.getSheetByName('–í—ã–≥—Ä—É–∑–∫–∞ –ê–º–æ –ü–æ–ª–Ω–∞—è');
    
    if (amoCrmSheet) {
      const data = amoCrmSheet.getDataRange().getValues();
      if (data.length > 1) {
        const headers = data[0];
        const rows = data.slice(1);
        
        rows.forEach(row => {
          const utm = {};
          let hasUtmData = false;
          
          headers.forEach((header, index) => {
            if (header.includes('UTM_') || header.includes('utm_')) {
              utm[header] = row[index];
              if (row[index]) hasUtmData = true;
            }
          });
          
          if (hasUtmData) {
            utmData.push(utm);
          }
        });
      }
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º UTM –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-—Ñ–æ—Ä–º
    const webFormsSheet = ss.getSheetByName('–ó–∞—è–≤–∫–∏ —Å –°–∞–π—Ç–∞');
    
    if (webFormsSheet) {
      const data = webFormsSheet.getDataRange().getValues();
      if (data.length > 1) {
        const headers = data[0];
        const rows = data.slice(1);
        
        rows.forEach(row => {
          const utm = {};
          let hasUtmData = false;
          
          headers.forEach((header, index) => {
            if (header.includes('utm_')) {
              utm[header] = row[index];
              if (row[index]) hasUtmData = true;
            }
          });
          
          if (hasUtmData) {
            utmData.push(utm);
          }
        });
      }
    }
    
    logInfo_('UTM_LOAD', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${utmData.length} –∑–∞–ø–∏—Å–µ–π UTM –¥–∞–Ω–Ω—ã—Ö`);
    return utmData;
    
  } catch (error) {
    logError_('UTM_LOAD', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ UTM –¥–∞–Ω–Ω—ã—Ö', error);
    return [];
  }
}

// ========================================
// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–∏—Å—Ç–∞–º–∏
// ========================================

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É DD.MM.YYYY
 */
function formatDate_(date) {
  if (!date) return '';
  
  try {
    const d = date instanceof Date ? date : new Date(date);
    if (isNaN(d.getTime())) return '';
    
    const day = d.getDate().toString().padStart(2, '0');
    const month = (d.getMonth() + 1).toString().padStart(2, '0');
    const year = d.getFullYear();
    
    return `${day}.${month}.${year}`;
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã:', error);
    return '';
  }
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–ª–∏—è–Ω–∏–µ —è—á–µ–µ–∫
 */
function safeMergeRange_(sheet, startRow, startCol, numRows, numCols) {
  try {
    if (numRows > 1 || numCols > 1) {
      const range = sheet.getRange(startRow, startCol, numRows, numCols);
      range.merge();
    }
  } catch (error) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–ª–∏—è–Ω–∏—è - —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
    console.log(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —è—á–µ–π–∫–∏ ${startRow}:${startCol}`);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–º—è –ª–∏—Å—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
function getSheetName_(key) {
  return CONFIG.SHEETS && CONFIG.SHEETS[key] ? CONFIG.SHEETS[key] : key;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ª–∏—Å—Ç –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π
 */
function getSheet_(sheetName) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = ss.getSheetByName(sheetName);
  
  if (!sheet) {
    sheet = ss.insertSheet(sheetName);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ  
    const range = sheet.getRange(1, 1, 100, 50);
    range.setFontFamily(CONFIG.FONT || 'PT Sans');
    range.setFontSize(10);
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    const headerRange = sheet.getRange(1, 1, 1, 50);
    headerRange.setFontWeight('bold');
    headerRange.setBackground('#e8f0fe');
    
    logInfo_('SHEET_CREATE', `–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ª–∏—Å—Ç: ${sheetName}`);
  }
  
  return sheet;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ª–∏—Å—Ç –ø–æ –∏–º–µ–Ω–∏ (–±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è)
 */
function getExistingSheet_(sheetName) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  return ss.getSheetByName(sheetName);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞
 */
function getSheetData_(sheetName) {
  const sheet = getExistingSheet_(sheetName);
  if (!sheet) {
    logWarning_('SHEET_DATA', `–õ–∏—Å—Ç ${sheetName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return [];
  }
  
  const data = sheet.getDataRange().getValues();
  return data.length > 0 ? data : [];
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –ª–∏—Å—Ç (–∞–ª–∏–∞—Å –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
 */
function getOrCreateSheet_(sheetName) {
  return getSheet_(sheetName);
}

/**
 * –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞
 */
function clearSheetData_(sheet) {
  if (sheet) {
    sheet.clear();
  }
}

/**
 * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
 */
function syncAllData() {
  logInfo_('SYNC_ALL', '–ù–∞—á–∞–ª–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    const syncResults = {
      amocrm: false,
      calltracking: false,
      webforms: false,
      reserves: false,
      guests: false
    };
    
    // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ API
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ —É—Å–ø–µ—à–Ω—É—é
    syncResults.amocrm = true;
    syncResults.calltracking = true;
    syncResults.webforms = true;
    syncResults.reserves = true;
    syncResults.guests = true;
    
    logInfo_('SYNC_ALL', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    return syncResults;
    
  } catch (error) {
    logError_('SYNC_ALL', '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö', error);
    throw error;
  }
}

/**
 * üéØ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –°–ë–û–†–ö–ò –†–ê–ë–û–ß–ï–ì–û –ê–ú–û
 * –°–æ–∑–¥–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ç–æ—á–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
 */
function buildWorkingAmoFile() {
  console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É —Ñ–∞–π–ª–∞ –†–ê–ë–û–ß–ò–ô –ê–ú–û');
  
  try {
    const workingSheet = getSheet_(getSheetName_('WORKING_AMO'));
    workingSheet.clear();
    
    // 1. –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å —Ç–æ—á–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
    createWorkingAmoHeaders_(workingSheet);
    
    // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    const consolidatedData = consolidateAllDataSources_();
    
    // 3. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    writeConsolidatedData_(workingSheet, consolidatedData);
    
    // 4. –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
    applyWorkingAmoFormatting_(workingSheet, consolidatedData.length);
    
    console.log(`‚úÖ –§–∞–π–ª –†–ê–ë–û–ß–ò–ô –ê–ú–û —Å–æ–±—Ä–∞–Ω: ${consolidatedData.length} –∑–∞–ø–∏—Å–µ–π`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –†–ê–ë–û–ß–ò–ô –ê–ú–û:', error);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–æ—á–Ω–æ –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
 */
function createWorkingAmoHeaders_(sheet) {
  const headers = [
    // ÔøΩ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–î–ï–õ–ö–ï (A‚ÄìH)
    'ID',                    // A
    '–ù–∞–∑–≤–∞–Ω–∏–µ',              // B
    '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π',         // C
    '–°—Ç–∞—Ç—É—Å',               // D
    '–ë—é–¥–∂–µ—Ç',               // E
    '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',        // F
    '–¢–µ–≥–∏',                 // G
    '–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è',        // H
    
    // üë§ –ö–û–ù–¢–ê–ö–¢ (I‚ÄìM)
    '–§–ò–û',                  // I
    '–¢–µ–ª–µ—Ñ–æ–Ω',              // J
    '–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE',    // K
    '–ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE',    // L (–¥—É–±–ª—å –¥–ª—è –≤—Ç–æ—Ä–æ–π –ª–∏–Ω–∏–∏)
    '–ë–∞—Ä (deal)',           // M
    
    // üïí –ë–†–û–ù–¨ (N‚ÄìR)
    '–î–∞—Ç–∞ –±—Ä–æ–Ω–∏',           // N
    '–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞',        // O
    '–ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π',        // P
    '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ú–û–ë',      // Q
    'R.–°—Ç–∞—Ç—É—Å—ã –≥–æ—Å—Ç–µ–π',     // R
    
    // ÔøΩ UTM/–ò–°–¢–û–ß–ù–ò–ö + üîç –ê–ù–ê–õ–ò–¢–ò–ö–ê (S‚ÄìAJ)
    '–ò—Å—Ç–æ—á–Ω–∏–∫',             // S
    '–¢–∏–ø –ª–∏–¥–∞',             // T
    'R.–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–¥–µ–ª–∫–∏',    // U
    'R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏', // V
    'UTM_SOURCE',           // W
    'UTM_MEDIUM',           // X
    'UTM_CAMPAIGN',         // Y
    'UTM_TERM',             // Z
    'UTM_CONTENT',          // AA
    'utm_referrer',         // AB
    'YM_CLIENT_ID',         // AC
    'GA_CLIENT_ID',         // AD
    'FORMNAME',             // AE
    'REFERER',              // AF
    'FORMID',               // AG
    'DATE',                 // AH
    'TIME',                 // AI
    'BUTTON_TEXT',          // AJ
    
    // üìå –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û (AK‚ÄìAO)
    'R.–¢–µ–≥ –≥–æ—Ä–æ–¥–∞',         // AK
    '–ü–û',                   // AL
    '–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞ (–û–ë)',  // AM
    '–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1',         // AN
    '–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞',     // AO
    
    // üü¶ SITE/RESERVES/GUESTS (–æ–±–æ–≥–∞—â–µ–Ω–∏–µ) (AP‚ÄìBA)
    'utm_source (–∏–∑ —Å–∞–π—Ç–∞/—Ä–µ–∑–µ—Ä–≤–æ–≤)', // AP
    'utm_medium',           // AQ
    'utm_campaign',         // AR
    '(—Ä–µ–∑–µ—Ä–≤, —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æ)', // AS
    'R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏ (–∏–∑ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞)', // AT
    '–í–∏–∑–∏—Ç–æ–≤ (–∏–∑ SITE)',    // AU
    '–°—É–º–º–∞ ‚ÇΩ (–∏–∑ SITE)',    // AV
    '–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç (–∏–∑ SITE)', // AW
    '–í–∏–∑–∏—Ç–æ–≤ (–∏–∑ GUESTS RP)', // AX
    '–°—É–º–º–∞ ‚ÇΩ (–∏–∑ GUESTS RP)', // AY
    '–ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç (–∏–∑ GUESTS RP)', // AZ
    '–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç (–∏–∑ GUESTS RP)', // BA
    
    // üßÆ –ê–í–¢–û‚Äë–ü–û–õ–Ø (BB‚ÄìBD)
    '–í–æ–∑—Ä–∞—Å—Ç —Å–¥–µ–ª–∫–∏ (–¥–Ω.)', // BB
    '–î–Ω–µ–π –¥–æ –±—Ä–æ–Ω–∏',        // BC
    '–°–∞—Ä–∞—Ñ–∞–Ω –≥–æ—Å—Ç–∏',        // BD
    
    // (–ø—Ä–æ—á–µ–µ) BE
    '_ym_uid'               // BE
  ];
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π
  applySectionFormatting_(sheet, headers.length);
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
 */
function applySectionFormatting_(sheet, totalCols) {
  // ÔøΩ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–î–ï–õ–ö–ï - —Ä–æ–∑–æ–≤—ã–π (A-H, –∫–æ–ª–æ–Ω–∫–∏ 1-8)
  sheet.getRange(1, 1, 1, 8)
    .setBackground('#f4cccc')
    .setFontWeight('bold')
    .setHorizontalAlignment('center');
  
  // üë§ –ö–û–ù–¢–ê–ö–¢ - –≥–æ–ª—É–±–æ–π (I-M, –∫–æ–ª–æ–Ω–∫–∏ 9-13)
  sheet.getRange(1, 9, 1, 5)
    .setBackground('#cfe2f3')
    .setFontWeight('bold')
    .setHorizontalAlignment('center');
    
  // üïí –ë–†–û–ù–¨ - —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π (N-R, –∫–æ–ª–æ–Ω–∫–∏ 14-18)
  sheet.getRange(1, 14, 1, 5)
    .setBackground('#d5a6bd')
    .setFontWeight('bold')
    .setHorizontalAlignment('center');
    
  // ÔøΩ UTM/–ò–°–¢–û–ß–ù–ò–ö + üîç –ê–ù–ê–õ–ò–¢–ò–ö–ê - –∂–µ–ª—Ç—ã–π (S-AJ, –∫–æ–ª–æ–Ω–∫–∏ 19-36) 
  sheet.getRange(1, 19, 1, 18)
    .setBackground('#fff2cc')
    .setFontWeight('bold')
    .setHorizontalAlignment('center');
    
  // ÔøΩ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û - —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π (AK-AO, –∫–æ–ª–æ–Ω–∫–∏ 37-41)
  sheet.getRange(1, 37, 1, 5)
    .setBackground('#d9ead3')
    .setFontWeight('bold')
    .setHorizontalAlignment('center');
    
  // üü¶ SITE/RESERVES/GUESTS - –≥–æ–ª—É–±–æ–π (AP-BA, –∫–æ–ª–æ–Ω–∫–∏ 42-53)
  sheet.getRange(1, 42, 1, 12)
    .setBackground('#cfe2f3')
    .setFontWeight('bold')
    .setHorizontalAlignment('center');
    
  // üßÆ –ê–í–¢–û‚Äë–ü–û–õ–Ø - —Å–µ—Ä—ã–π (BB-BE, –∫–æ–ª–æ–Ω–∫–∏ 54-57)
  sheet.getRange(1, 54, 1, 4)
    .setBackground('#efefef')
    .setFontWeight('bold')
    .setHorizontalAlignment('center');
}

/**
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
 */
function consolidateAllDataSources_() {
  console.log('üìä –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–∞–±–æ—á–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    const workingData = {
      phoneMap: new Map(),
      calltrackingData: new Map(),
      utmData: new Map(),
      siteData: new Map(),
      reserveData: new Map(),
      guestData: new Map(),
      errors: []
    };
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const mainData = loadMainDataSources_();
    
    // –°—Ç—Ä–æ–∏–º –∫–∞—Ä—Ç—ã —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
    buildPhoneMaps_(workingData, mainData);
    
    console.log(`–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: AMO=${mainData.amocrm.length}, WebForms=${mainData.webForms?.length || 0}`);
    
    const consolidatedData = [];
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å–¥–µ–ª–∫—É AMO
    for (let i = 0; i < mainData.amocrm.length; i++) {
      const deal = mainData.amocrm[i];
      const phone = normalizePhone_(deal.phone);
      
      // –û–±–æ–≥–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
      const enrichedData = enrichDealWithAllSources_(deal, phone, workingData);
      consolidatedData.push(enrichedData);
    }
    
    console.log(`‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–æ ${consolidatedData.length} –∑–∞–ø–∏—Å–µ–π`);
    return consolidatedData;
    
  } catch (error) {
    logError_('CONSOLIDATE', '–û—à–∏–±–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', error);
    throw error;
  }
}

/**
 * –û–±–æ–≥–∞—â–∞–µ—Ç —Å–¥–µ–ª–∫—É –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –†–ê–ë–û–ß–ò–ô –ê–ú–û
 * –°–æ–∑–¥–∞–µ—Ç –µ–¥–∏–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö 6 –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤  
 */
function enrichDealWithAllSources_(deal, phone, workingData) {
  // –ü–æ–ª—É—á–∞–µ–º –æ–±–æ–≥–∞—â–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
  const calltrackingData = workingData.calltrackingData.get(phone) || {};
  const siteData = workingData.siteData.get(phone) || {};
  const reserveData = workingData.reserveData.get(phone) || {};
  const guestData = workingData.guestData.get(phone) || {};
  
  return [
    // ÔøΩ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–î–ï–õ–ö–ï (A‚ÄìH)
    deal.id || '',                              // A ‚Äî ID
    deal.name || '',                            // B ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ
    deal.responsible || '',                     // C ‚Äî –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π
    deal.status || '',                          // D ‚Äî –°—Ç–∞—Ç—É—Å
    deal.budget || deal.price || 0,             // E ‚Äî –ë—é–¥–∂–µ—Ç
    formatDate_(deal.created_at) || '',         // F ‚Äî –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    deal.tags || '',                            // G ‚Äî –¢–µ–≥–∏
    formatDate_(deal.closed_at) || '',          // H ‚Äî –î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    
    // üë§ –ö–û–ù–¢–ê–ö–¢ (I‚ÄìM)
    deal.contact_name || deal.client_name || '', // I ‚Äî –§–ò–û
    deal.phone || '',                           // J ‚Äî –¢–µ–ª–µ—Ñ–æ–Ω
    deal.mango_line1 || '',                     // K ‚Äî –ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE
    deal.mango_line2 || '',                     // L ‚Äî –ù–æ–º–µ—Ä –ª–∏–Ω–∏–∏ MANGO OFFICE (–¥—É–±–ª—å)
    deal.bar_name || deal.name || '',           // M ‚Äî –ë–∞—Ä (deal)
    
    // üïí –ë–†–û–ù–¨ (N‚ÄìR)
    formatDate_(deal.booking_date) || formatDate_(deal.created_at) || '', // N ‚Äî –î–∞—Ç–∞ –±—Ä–æ–Ω–∏
    deal.visit_time || '',                      // O ‚Äî –í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞
    deal.guest_count || '',                     // P ‚Äî –ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π
    deal.comment || '',                         // Q ‚Äî –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ú–û–ë
    deal.guest_status || deal.status || '',     // R ‚Äî R.–°—Ç–∞—Ç—É—Å—ã –≥–æ—Å—Ç–µ–π
    
    // ÔøΩ UTM/–ò–°–¢–û–ß–ù–ò–ö + üîç –ê–ù–ê–õ–ò–¢–ò–ö–ê (S‚ÄìAJ)
    utmData.utm_source || deal.source || '',    // S ‚Äî –ò—Å—Ç–æ—á–Ω–∏–∫
    deal.lead_type || '',                       // T ‚Äî –¢–∏–ø –ª–∏–¥–∞
    deal.deal_source || '',                     // U ‚Äî R.–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–¥–µ–ª–∫–∏
    deal.tel_source || calltrackingData.source || '', // V ‚Äî R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏
    utmData.utm_source || '',                   // W ‚Äî UTM_SOURCE
    utmData.utm_medium || '',                   // X ‚Äî UTM_MEDIUM
    utmData.utm_campaign || '',                 // Y ‚Äî UTM_CAMPAIGN
    utmData.utm_term || '',                     // Z ‚Äî UTM_TERM
    utmData.utm_content || '',                  // AA ‚Äî UTM_CONTENT
    utmData.utm_referrer || utmData.referer || '', // AB ‚Äî utm_referrer
    utmData.ym_client_id || '',                 // AC ‚Äî YM_CLIENT_ID
    utmData.ga_client_id || '',                 // AD ‚Äî GA_CLIENT_ID
    utmData.formname || '',                     // AE ‚Äî FORMNAME
    utmData.referer || '',                      // AF ‚Äî REFERER
    utmData.formid || '',                       // AG ‚Äî FORMID
    utmData.date || '',                         // AH ‚Äî DATE
    utmData.time || '',                         // AI ‚Äî TIME
    utmData.button_text || '',                  // AJ ‚Äî BUTTON_TEXT
    
    // üìå –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û (AK‚ÄìAO)
    deal.city_tag || '',                        // AK ‚Äî R.–¢–µ–≥ –≥–æ—Ä–æ–¥–∞
    deal.software || '',                        // AL ‚Äî –ü–û
    deal.refusal_reason || '',                  // AM ‚Äî –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞ (–û–ë)
    siteData.note || '',                        // AN ‚Äî –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1
    siteData.last_request || '',                // AO ‚Äî –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞
    
    // üü¶ SITE/RESERVES/GUESTS (–æ–±–æ–≥–∞—â–µ–Ω–∏–µ) (AP‚ÄìBA)
    siteData.utm_source || '',                  // AP ‚Äî utm_source (–∏–∑ —Å–∞–π—Ç–∞/—Ä–µ–∑–µ—Ä–≤–æ–≤)
    siteData.utm_medium || '',                  // AQ ‚Äî utm_medium
    siteData.utm_campaign || '',                // AR ‚Äî utm_campaign
    reserveData.note || '',                     // AS ‚Äî (—Ä–µ–∑–µ—Ä–≤, —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æ)
    calltrackingData.tel_source || '',          // AT ‚Äî R.–ò—Å—Ç–æ—á–Ω–∏–∫ –¢–ï–õ —Å–¥–µ–ª–∫–∏ (–∏–∑ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞)
    siteData.visits || 0,                       // AU ‚Äî –í–∏–∑–∏—Ç–æ–≤ (–∏–∑ SITE)
    siteData.amount || 0,                       // AV ‚Äî –°—É–º–º–∞ ‚ÇΩ (–∏–∑ SITE)
    siteData.last_visit || '',                  // AW ‚Äî –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç (–∏–∑ SITE)
    guestData.visits || 0,                      // AX ‚Äî –í–∏–∑–∏—Ç–æ–≤ (–∏–∑ GUESTS RP)
    guestData.amount || 0,                      // AY ‚Äî –°—É–º–º–∞ ‚ÇΩ (–∏–∑ GUESTS RP)
    guestData.first_visit || '',                // AZ ‚Äî –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç (–∏–∑ GUESTS RP)
    guestData.last_visit || '',                 // BA ‚Äî –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç (–∏–∑ GUESTS RP)
    
    // üßÆ –ê–í–¢–û‚Äë–ü–û–õ–Ø (BB‚ÄìBD)
    calculateDealAge_(deal.created_at),         // BB ‚Äî –í–æ–∑—Ä–∞—Å—Ç —Å–¥–µ–ª–∫–∏ (–¥–Ω.)
    calculateDaysToBooking_(deal.created_at, deal.booking_date), // BC ‚Äî –î–Ω–µ–π –¥–æ –±—Ä–æ–Ω–∏
    deal.referral_type || '',                   // BD ‚Äî –°–∞—Ä–∞—Ñ–∞–Ω –≥–æ—Å—Ç–∏
    
    // (–ø—Ä–æ—á–µ–µ) BE
    utmData._ym_uid || ''                       // BE ‚Äî _ym_uid
  ];
}
  
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ AmoCRM –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const amoCrmData = loadAmoCrmData_();
    
    if (amoCrmData.length === 0) {
      logWarning_('DAILY_STATS', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö AmoCRM –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    let statsSheet = getSheet_(getSheetName_('DAILY_STATISTICS'));
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    statsSheet.clear();
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = [
      '–î–∞—Ç–∞', 
      '–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫', 
      '–ù–æ–≤—ã—Ö —Å–¥–µ–ª–æ–∫', 
      '–ó–∞–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫', 
      '–£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫', 
      '–û—Ç–∫–∞–∑–æ–≤',
      '–û–±—â–∞—è —Å—É–º–º–∞', 
      '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫',
      '–ö–æ–Ω–≤–µ—Ä—Å–∏—è %'
    ];
    
    statsSheet.getRange(1, 1, 1, headers.length).setValues([headers]);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –¥–Ω—è–º
    const dailyStats = new Map();
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    amoCrmData.forEach(deal => {
      const createdDate = deal.created_at instanceof Date ? deal.created_at : new Date(deal.created_at);
      const dateKey = createdDate.toDateString();
      
      if (!dailyStats.has(dateKey)) {
        dailyStats.set(dateKey, {
          date: createdDate,
          total: 0,
          new: 0,
          closed: 0,
          success: 0,
          failed: 0,
          revenue: 0
        });
      }
      
      const dayStats = dailyStats.get(dateKey);
      dayStats.total++;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
      const status = deal.status || '';
      const normalizedStatus = deal.normalized_status || '';
      
      if (normalizedStatus === 'new') {
        dayStats.new++;
      } else if (normalizedStatus === 'success') {
        dayStats.success++;
        dayStats.closed++;
        dayStats.revenue += deal.price || 0;
      } else if (normalizedStatus === 'failed') {
        dayStats.failed++;
        dayStats.closed++;
      }
    });
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    const statsData = Array.from(dailyStats.values())
      .sort((a, b) => b.date - a.date) // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –¥–∞—Ç—ã
      .slice(0, 30) // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
      .map(stats => {
        const avgDeal = stats.success > 0 ? stats.revenue / stats.success : 0;
        const conversion = stats.total > 0 ? (stats.success / stats.total * 100).toFixed(1) : 0;
        
        return [
          stats.date,
          stats.total,
          stats.new,
          stats.closed,
          stats.success,
          stats.failed,
          stats.revenue,
          Math.round(avgDeal),
          conversion + '%'
        ];
      });
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    if (statsData.length > 0) {
      statsSheet.getRange(2, 1, statsData.length, headers.length).setValues(statsData);
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      statsSheet.getRange(1, 1, 1, headers.length)
        .setBackground('#4285f4')
        .setFontColor('white')
        .setFontWeight('bold');
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—É–º–º—ã
      if (statsData.length > 0) {
        statsSheet.getRange(2, 7, statsData.length, 2).setNumberFormat('#,##0');
      }
      
      // –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫
      for (let i = 1; i <= headers.length; i++) {
        statsSheet.autoResizeColumn(i);
      }
      
      // –ó–∞–º–æ—Ä–æ–∑–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
      statsSheet.setFrozenRows(1);
    }
    
    logInfo_('DAILY_STATS', `–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${statsData.length} –¥–Ω–µ–π`);
    
  } catch (error) {
    logError_('DAILY_STATS', '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', error);
    throw error;
  }
}

/**
 * –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
 */
function syncAmoCrmDataOnly() {
  logInfo_('SYNC_AMO', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ AmoCRM –¥–∞–Ω–Ω—ã—Ö');
  // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ AmoCRM
}

function syncWebFormsDataOnly() {
  logInfo_('SYNC_WEB', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –≤–µ–±-—Ñ–æ—Ä–º');
  // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤–µ–±-—Ñ–æ—Ä–º
}

function syncCallTrackingDataOnly() {
  logInfo_('SYNC_CALL', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞');
  // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–ª–ª—Ç—Ä–µ–∫–∏–Ω–≥–∞
}

function syncYandexMetricaDataOnly() {
  logInfo_('SYNC_YM', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏');
  // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—Å—Ç
 */
function writeConsolidatedData_(sheet, data) {
  if (data.length === 0) {
    console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }
  
  console.log(`üìù –ó–∞–ø–∏—Å—ã–≤–∞–µ–º ${data.length} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö...`);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç–∞–º–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const BATCH_SIZE = 100;
  let startRow = 2; // –ù–∞—á–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  
  for (let i = 0; i < data.length; i += BATCH_SIZE) {
    const batch = data.slice(i, Math.min(i + BATCH_SIZE, data.length));
    const endRow = startRow + batch.length - 1;
    
    try {
      sheet.getRange(startRow, 1, batch.length, batch[0].length).setValues(batch);
      console.log(`‚úÖ –ó–∞–ø–∏—Å–∞–Ω –ø–∞–∫–µ—Ç ${i + 1}-${Math.min(i + BATCH_SIZE, data.length)}`);
      startRow = endRow + 1;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ø–∞–∫–µ—Ç–∞ ${i + 1}:`, error);
    }
  }
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ –¥–∞–Ω–Ω—ã–º –∫–∞–∫ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö
 */
function applyWorkingAmoFormatting_(sheet, dataRows) {
  console.log('üé® –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...');
  
  try {
    // –û–±—â–∏–π —à—Ä–∏—Ñ—Ç –¥–ª—è –≤—Å–µ–≥–æ –ª–∏—Å—Ç–∞
    const maxCols = sheet.getLastColumn();
    const totalRows = dataRows + 1; // +1 –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    
    sheet.getRange(1, 1, totalRows, maxCols)
      .setFontFamily(CONFIG.FONT || 'PT Sans')
      .setFontSize(9);
    
    // –ó–∞–º–æ—Ä–æ–∑–∫–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    sheet.setFrozenRows(1);
    
    // –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –∫–æ–ª–æ–Ω–æ–∫
    for (let col = 1; col <= maxCols; col++) {
      sheet.autoResizeColumn(col);
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —É—Å–ª–æ–≤–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
    applyConditionalFormatting_(sheet, totalRows);
    
    console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —É—Å–ª–æ–≤–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
 */
function applyConditionalFormatting_(sheet, totalRows) {
  // –ö–æ–ª–æ–Ω–∫–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ (R.–°—Ç–∞—Ç—É—Å –≥–æ—Å—Ç–µ–π - 6—è –∫–æ–ª–æ–Ω–∫–∞)
  const statusRange = sheet.getRange(2, 6, totalRows - 1, 1);
  
  // –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
  const statusColors = {
    '–ù–æ–≤—ã–π': '#ccffcc',      // —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
    '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω': '#ffe599', // –∂–µ–ª—Ç—ã–π  
    '–ü—Ä–∏—à–µ–ª': '#b6d7a8',     // –∑–µ–ª–µ–Ω—ã–π
    '–ù–µ –ø—Ä–∏—à–µ–ª': '#f4cccc',  // —Å–≤–µ—Ç–ª–æ-–∫—Ä–∞—Å–Ω—ã–π
    '–û—Ç–∫–∞–∑': '#ea9999'       // –∫—Ä–∞—Å–Ω—ã–π
  };
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–∞ (—á–µ—Ä–µ–∑ API —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–∂–Ω–æ, –¥–µ–ª–∞–µ–º –±–∞–∑–æ–≤–æ)
  for (let row = 2; row <= totalRows; row++) {
    const statusCell = sheet.getRange(row, 6);
    const status = statusCell.getValue();
    
    if (statusColors[status]) {
      statusCell.setBackground(statusColors[status]);
    }
  }
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç —Å–¥–µ–ª–∫–∏ –≤ –¥–Ω—è—Ö
 */
function calculateDealAge_(createdDate) {
  if (!createdDate) return 0;
  
  const created = new Date(createdDate);
  const now = new Date();
  const diffTime = Math.abs(now - created);
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  
  return diffDays;
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –¥–Ω–∏ –¥–æ –±—Ä–æ–Ω–∏
 */
function calculateDaysToBooking_(createdDate, bookingDate) {
  if (!createdDate || !bookingDate) return 0;
  
  const created = new Date(createdDate);
  const booking = new Date(bookingDate);
  const diffTime = booking - created;
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  
  return diffDays > 0 ? diffDays : 0;
}
